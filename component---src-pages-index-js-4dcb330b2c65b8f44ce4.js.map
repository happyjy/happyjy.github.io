{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/components/Post.js","webpack:///./src/pages/index.js","webpack:///./src/util/utilityFunctions.js","webpack:///./node_modules/reactstrap/es/CardSubtitle.js"],"names":["propTypes","color","string","pill","bool","tag","innerRef","oneOfType","object","func","children","node","className","cssModule","Badge","props","Tag","attributes","classes","href","createElement","ref","defaultProps","Post","numberOfPost","title","author","slug","date","body","category","fluid","tags","to","toLowerCase","length","map","key","slugify","indexQuery","IndexPage","pageTitle","keywords","query","render","data","console","log","allMarkdownRemark","edges","id","fields","frontmatter","excerpt","image","childImageSharp","module","exports","str","replace","from","i","l","RegExp","charAt","CardSubtitle"],"mappings":"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","file":"component---src-pages-index-js-4dcb330b2c65b8f44ce4.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  Badge,\n  Card,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\"\n// import Img from \"gatsby-image\"\nimport { slugify } from \"../util/utilityFunctions\"\n\nconst Post = ({\n  numberOfPost,\n  title,\n  author,\n  slug,\n  date,\n  body,\n  fluid,\n  category,\n  tags,\n}) => {\n  // console.log('### numberOfPost: ', numberOfPost);\n  return (\n    <Card>\n      {/* {!fluid ? (\n        \"\"\n      ) : (\n        <Link to={slug}>\n          <Img className=\"card-image-top cardImg\" fluid={fluid} />\n        </Link>\n      )} */}\n      <CardBody>\n        <CardTitle>\n          <Link to={slug}>\n            <h3>{title}</h3>\n          </Link>\n        </CardTitle>\n        <CardSubtitle>\n          <span className=\"text-info\">{date}</span>\n          {author ? `  by` : \"\"} <span className=\"text-info\">{author}</span>\n        </CardSubtitle>\n        <div className=\"post-type-container\">\n          <ul className=\"post-category\">\n            <li>\n              <Link to={`/category/${category && category.toLowerCase()}`}>\n                <Badge color=\"danger\" className=\"text-uppercase\" pill>\n                  {category}\n                </Badge>\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"post-tags\">\n            {tags &&\n              tags.length > 0 &&\n              tags.map(tag => (\n                <li key={tag}>\n                  <Link to={`/tag/${slugify(tag)}`}>\n                    <Badge color=\"primary\" className=\"text-uppercase\" pill>\n                      {tag}\n                    </Badge>\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <CardText>\n          <Link to={slug}>{body}</Link>\n        </CardText>\n        {/* <Link to={slug} className=\"btn btn-outline-primary float-right\">\n          Read more\n        </Link> */}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Post\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport { graphql, StaticQuery } from 'gatsby';\nimport SEO from '../components/seo';\nimport Post from '../components/Post';\n// import PaginationLinks from '../components/PaginationLink';\n\nconst IndexPage = () => {\n\t// const postsPerPage = 5;\n\t// let numberOfPages;\n\tconst numberOfPostFunction = function(numberOfPost) {\n\t\treturn numberOfPost;\n\t};\n\tlet numberOfPost;\n\treturn (\n\t\t<Layout pageTitle='developBlog' numberOfPost={numberOfPost}>\n\t\t\t<SEO title='Home' keywords={[ `gatsby`, `application`, `react` ]} />\n\t\t\t<StaticQuery\n\t\t\t\tquery={indexQuery}\n\t\t\t\trender={(data) => {\n\t\t\t\t\t// numberOfPages = Math.ceil(data.allMarkdownRemark.totalCount / postsPerPage);\n\n\t\t\t\t\tconsole.log('### numberOfPost < index.js ');\n\t\t\t\t\tnumberOfPost = numberOfPostFunction(data.allMarkdownRemark.edges.length);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{data.allMarkdownRemark.edges.map(({ node }) => (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\t\t\t\tslug={node.fields.slug}\n\t\t\t\t\t\t\t\t\ttitle={node.frontmatter.title}\n\t\t\t\t\t\t\t\t\tauthor={node.frontmatter.author}\n\t\t\t\t\t\t\t\t\tdate={node.frontmatter.date}\n\t\t\t\t\t\t\t\t\tbody={node.excerpt}\n\t\t\t\t\t\t\t\t\tcategory={node.frontmatter.category}\n\t\t\t\t\t\t\t\t\ttags={node.frontmatter.tags}\n\t\t\t\t\t\t\t\t\tfluid={node.frontmatter.image && node.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{/* <PaginationLinks currentPage={1} numberOfPages={numberOfPages} /> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Layout>\n\t);\n};\n\nconst indexQuery = graphql`\n\tquery indexQuery {\n\t\t# allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 5) {\n\t\tallMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"MMM Do YYYY\")\n\t\t\t\t\t\tauthor\n\t\t\t\t\t\ttags\n\t\t\t\t\t\tcategory\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 600) {\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport default IndexPage;\n","// eg)Web Design => web-design\nfunction slugify(str) {\n  str = str.replace(/^\\s+|\\s+$/g, \"\") // trim\n  str = str.toLowerCase()\n\n  // remove accents, swap ñ for n, etc\n  var from = \"åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;\"\n  var to = \"aaaaaaeeeeiiiioooouuuunc------\"\n\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i))\n  }\n\n  str = str\n    .replace(/[^a-z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣 -]/g, \"\") // remove invalid chars\n    .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n    .replace(/-+/g, \"-\") // collapse dashes\n    .replace(/^-+/, \"\") // trim - from start of text\n    .replace(/-+$/, \"\") // trim - from end of text\n\n  return str\n}\n\n// gatsby-node.js 를 사용하기 때문에 es5 export 사용\nmodule.exports = { slugify }\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardSubtitle = function CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardSubtitle.propTypes = propTypes;\nCardSubtitle.defaultProps = defaultProps;\nexport default CardSubtitle;"],"sourceRoot":""}