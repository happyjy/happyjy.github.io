{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/components/Post.js","webpack:///./src/util/utilityFunctions.js","webpack:///./src/util/authors.js","webpack:///./node_modules/reactstrap/es/CardSubtitle.js","webpack:///./src/templates/author-post.js"],"names":["propTypes","color","string","pill","bool","tag","innerRef","oneOfType","object","func","children","node","className","cssModule","Badge","props","Tag","attributes","classes","href","createElement","ref","defaultProps","Post","numberOfPost","title","author","slug","date","body","category","fluid","tags","to","toLowerCase","length","map","key","slugify","module","exports","str","replace","from","i","l","RegExp","charAt","name","imageUrl","bio","facebook","instagram","github","CardSubtitle","authorQuery","authorPosts","data","pageContext","totalCount","allMarkdownRemark","authors","find","x","authorName","pageHeader","pageTitle","postAuthor","authorImageFluid","file","childImageSharp","edges","id","fields","frontmatter","excerpt","image"],"mappings":"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","file":"component---src-templates-author-post-js-2c3f08ea6ea92d4628ba.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  Badge,\n  Card,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\"\n// import Img from \"gatsby-image\"\nimport { slugify } from \"../util/utilityFunctions\"\n\nconst Post = ({\n  numberOfPost,\n  title,\n  author,\n  slug,\n  date,\n  body,\n  fluid,\n  category,\n  tags,\n}) => {\n  // console.log('### numberOfPost: ', numberOfPost);\n  return (\n    <Card>\n      {/* {!fluid ? (\n        \"\"\n      ) : (\n        <Link to={slug}>\n          <Img className=\"card-image-top cardImg\" fluid={fluid} />\n        </Link>\n      )} */}\n      <CardBody>\n        <CardTitle>\n          <Link to={slug}>\n            <h3>{title}</h3>\n          </Link>\n        </CardTitle>\n        <CardSubtitle>\n          <span className=\"text-info\">{date}</span>\n          {author ? `  by` : \"\"} <span className=\"text-info\">{author}</span>\n        </CardSubtitle>\n        <div className=\"post-type-container\">\n          <ul className=\"post-category\">\n            <li>\n              <Link to={`/category/${category && category.toLowerCase()}`}>\n                <Badge color=\"danger\" className=\"text-uppercase\" pill>\n                  {category}\n                </Badge>\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"post-tags\">\n            {tags &&\n              tags.length > 0 &&\n              tags.map(tag => (\n                <li key={tag}>\n                  <Link to={`/tag/${slugify(tag)}`}>\n                    <Badge color=\"primary\" className=\"text-uppercase\" pill>\n                      {tag}\n                    </Badge>\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <CardText>\n          <Link to={slug}>{body}</Link>\n        </CardText>\n        {/* <Link to={slug} className=\"btn btn-outline-primary float-right\">\n          Read more\n        </Link> */}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Post\n","// eg)Web Design => web-design\nfunction slugify(str) {\n  str = str.replace(/^\\s+|\\s+$/g, \"\") // trim\n  str = str.toLowerCase()\n\n  // remove accents, swap ñ for n, etc\n  var from = \"åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;\"\n  var to = \"aaaaaaeeeeiiiioooouuuunc------\"\n\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i))\n  }\n\n  str = str\n    .replace(/[^a-z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣 -]/g, \"\") // remove invalid chars\n    .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n    .replace(/-+/g, \"-\") // collapse dashes\n    .replace(/^-+/, \"\") // trim - from start of text\n    .replace(/-+$/, \"\") // trim - from end of text\n\n  return str\n}\n\n// gatsby-node.js 를 사용하기 때문에 es5 export 사용\nmodule.exports = { slugify }\n","const authors = [\n  {\n    name: 'jyoon',\n    imageUrl: 'jyoon.jpeg',\n    bio: '풀 스택 개발자를 지향하며 정진 하고 있는 5년차 개발자 윤재윤입니다.',\n    facebook: '',\n    instagram: 'https://www.instagram.com/happyjy_/',\n    github: 'https://www.github.com/happyjy/',\n  },\n  {\n    name: 'miro',\n    imageUrl: 'miro.jpeg',\n    bio: '갑수목장 고양이',\n    facebook: '',\n    instagram: '',\n    github: '',\n  }\n];\n\nmodule.exports = authors;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardSubtitle = function CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardSubtitle.propTypes = propTypes;\nCardSubtitle.defaultProps = defaultProps;\nexport default CardSubtitle;","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Post from \"../components/Post\"\nimport authors from \"../util/authors\"\nimport { graphql } from \"gatsby\"\n\nconst authorPosts = ({ data, pageContext }) => {\n  // console.log(\"####### author-post.js \")\n  // console.log({ data, pageContext })\n  const { totalCount } = data.allMarkdownRemark\n  const author = authors.find(x => x.name === pageContext.authorName)\n  const pageHeader = `${totalCount} Posts by: ${pageContext.authorName}`\n\n  return (\n    <Layout\n      pageTitle={pageHeader}\n      postAuthor={author}\n      authorImageFluid={data.file.childImageSharp.fluid}\n    >\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <Post\n          key={node.id}\n          slug={node.fields.slug}\n          title={node.frontmatter.title}\n          author={node.frontmatter.author}\n          date={node.frontmatter.date}\n          body={node.excerpt}\n          category={node.frontmatter.category}\n          tags={node.frontmatter.tags}\n          fluid={\n            node.frontmatter.image &&\n            node.frontmatter.image.childImageSharp.fluid\n          }\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport const authorQuery = graphql`\n  query($authorName: String!, $imageUrl: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: $authorName } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          id\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM Do YYYY\")\n            author\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 650) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    file(relativePath: { eq: $imageUrl }) {\n      childImageSharp {\n        fluid(maxWidth: 300) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nexport default authorPosts\n"],"sourceRoot":""}