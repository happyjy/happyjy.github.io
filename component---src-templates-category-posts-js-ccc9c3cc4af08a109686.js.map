{"version":3,"sources":["webpack:///./src/templates/category-posts.js","webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/components/Post.js","webpack:///./src/util/utilityFunctions.js","webpack:///./node_modules/reactstrap/es/CardSubtitle.js"],"names":["categoryPosts","data","category","pageContext","totalCount","allMarkdownRemark","pageHeader","pageTitle","edges","map","node","key","id","slug","fields","title","frontmatter","author","date","body","excerpt","tags","fluid","image","childImageSharp","Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","Post","numberOfPost","console","log","to","toLowerCase","length","slugify","module","exports","str","replace","from","i","l","RegExp","charAt","CardSubtitle"],"mappings":"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","file":"component---src-templates-category-posts-js-ccc9c3cc4af08a109686.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Post from \"../components/Post\"\n\n//data: graphql로 받은 값, pageContext: gatsby-node에서 createPage함수에서 context key값으로 설정한값\nconst categoryPosts = ({ data, pageContext }) => {\n  const { category } = pageContext\n  const { totalCount } = data.allMarkdownRemark\n  const pageHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${category}\"`\n\n  return (\n    <Layout pageTitle={pageHeader}>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <Post\n          key={node.id}\n          slug={node.fields.slug}\n          title={node.frontmatter.title}\n          author={node.frontmatter.author}\n          date={node.frontmatter.date}\n          body={node.excerpt}\n          category={node.frontmatter.category}\n          tags={node.frontmatter.tags}\n          fluid={\n            node.frontmatter.image &&\n            node.frontmatter.image.childImageSharp.fluid\n          }\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport const categoryQuery = graphql`\n  query($category: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM Do YYYY\")\n            author\n            tags\n            category\n            image {\n              childImageSharp {\n                fluid(maxWidth: 650, maxHeight: 371) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport default categoryPosts\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  Badge,\n  Card,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\"\n// import Img from \"gatsby-image\"\nimport { slugify } from \"../util/utilityFunctions\"\n\nconst Post = ({\n  numberOfPost,\n  title,\n  author,\n  slug,\n  date,\n  body,\n  fluid,\n  category,\n  tags,\n}) => {\n  // console.log('### numberOfPost: ', numberOfPost);\n  console.log(\"### slug: \", slug)\n  return (\n    <Card>\n      {/* {!fluid ? (\n        \"\"\n      ) : (\n        <Link to={slug}>\n          <Img className=\"card-image-top cardImg\" fluid={fluid} />\n        </Link>\n      )} */}\n      <CardBody>\n        <CardTitle>\n          <Link to={`/${slug}`}>\n            <h5>{title}</h5>\n          </Link>\n        </CardTitle>\n        <CardSubtitle>\n          <span className=\"text-info\">{date}</span>\n          {author ? `  by` : \"\"} <span className=\"text-info\">{author}</span>\n        </CardSubtitle>\n        <div className=\"post-type-container\">\n          <ul className=\"post-category\">\n            <li>\n              <Link to={`/category/${category && category.toLowerCase()}`}>\n                <Badge color=\"danger\" className=\"text-uppercase\" pill>\n                  {category}\n                </Badge>\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"post-tags\">\n            {tags &&\n              tags.length > 0 &&\n              tags.map(tag => (\n                <li key={tag}>\n                  <Link to={`/tag/${slugify(tag)}`}>\n                    <Badge color=\"primary\" className=\"text-uppercase\" pill>\n                      {tag}\n                    </Badge>\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n        {/* <CardText>\n          <Link to={`/${slug}`}>{body}</Link>\n        </CardText> */}\n        {/* <Link to={slug} className=\"btn btn-outline-primary float-right\">\n          Read more\n        </Link> */}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Post\n","// eg)Web Design => web-design\nfunction slugify(str) {\n  str = str.replace(/^\\s+|\\s+$/g, \"\") // trim\n  str = str.toLowerCase()\n\n  // remove accents, swap ñ for n, etc\n  var from = \"åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;\"\n  var to = \"aaaaaaeeeeiiiioooouuuunc------\"\n\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i))\n  }\n\n  str = str\n    .replace(/[^a-z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣 -]/g, \"\") // remove invalid chars\n    .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n    .replace(/-+/g, \"-\") // collapse dashes\n    .replace(/^-+/, \"\") // trim - from start of text\n    .replace(/-+$/, \"\") // trim - from end of text\n\n  return str\n}\n\n// gatsby-node.js 를 사용하기 때문에 es5 export 사용\nmodule.exports = { slugify }\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardSubtitle = function CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardSubtitle.defaultProps = defaultProps;\nexport default CardSubtitle;"],"sourceRoot":""}