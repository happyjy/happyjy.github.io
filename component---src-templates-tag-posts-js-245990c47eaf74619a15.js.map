{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/templates/tag-posts.js","webpack:///./src/components/Post.js","webpack:///./src/util/utilityFunctions.js","webpack:///./node_modules/reactstrap/es/CardSubtitle.js"],"names":["Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","tagPosts","data","pageContext","totalCount","allMarkdownRemark","pageHeader","pageTitle","edges","map","node","key","id","slug","fields","title","frontmatter","author","date","body","excerpt","tags","fluid","image","childImageSharp","Post","numberOfPost","category","console","log","to","toLowerCase","length","slugify","module","exports","str","replace","from","i","l","RegExp","charAt","CardSubtitle"],"mappings":"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","file":"component---src-templates-tag-posts-js-245990c47eaf74619a15.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\n\n//data: graphql로 받은 값, pageContext: gatsby-node에서 createPage함수에서 context key값으로 설정한값\nconst tagPosts = ({ data, pageContext }) => {\n\tconst { tag } = pageContext;\n\tconst { totalCount } = data.allMarkdownRemark;\n\tconst pageHeader = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`;\n\n\treturn (\n\t\t<Layout pageTitle={pageHeader}>\n\t\t\t{data.allMarkdownRemark.edges.map(({ node }) => (\n\t\t\t\t<Post\n\t\t\t\t\tkey={node.id}\n\t\t\t\t\tslug={node.fields.slug}\n\t\t\t\t\ttitle={node.frontmatter.title}\n\t\t\t\t\tauthor={node.frontmatter.author}\n\t\t\t\t\tdate={node.frontmatter.date}\n\t\t\t\t\tbody={node.excerpt}\n\t\t\t\t\ttags={node.frontmatter.tags}\n\t\t\t\t\tfluid={node.frontmatter.image && node.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Layout>\n\t);\n};\n\nexport const tagQuery = graphql`\n\tquery($tag: String!) {\n\t\tallMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tfilter: { frontmatter: { tags: { in: [$tag] } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"MMMM Do YYYY\")\n\t\t\t\t\t\tauthor\n\t\t\t\t\t\ttags\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 650, maxHeight: 371) {\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default tagPosts;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  Badge,\n  Card,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\"\n// import Img from \"gatsby-image\"\nimport { slugify } from \"../util/utilityFunctions\"\n\nconst Post = ({\n  numberOfPost,\n  title,\n  author,\n  slug,\n  date,\n  body,\n  fluid,\n  category,\n  tags,\n}) => {\n  // console.log('### numberOfPost: ', numberOfPost);\n  console.log(\"### slug: \", slug)\n  return (\n    <Card>\n      {/* {!fluid ? (\n        \"\"\n      ) : (\n        <Link to={slug}>\n          <Img className=\"card-image-top cardImg\" fluid={fluid} />\n        </Link>\n      )} */}\n      <CardBody>\n        <CardTitle>\n          <Link to={`/${slug}`}>\n            <h5>{title}</h5>\n          </Link>\n        </CardTitle>\n        <CardSubtitle>\n          <span className=\"text-info\">{date}</span>\n          {author ? `  by` : \"\"} <span className=\"text-info\">{author}</span>\n        </CardSubtitle>\n        <div className=\"post-type-container\">\n          <ul className=\"post-category\">\n            <li>\n              <Link to={`/category/${category && category.toLowerCase()}`}>\n                <Badge color=\"danger\" className=\"text-uppercase\" pill>\n                  {category}\n                </Badge>\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"post-tags\">\n            {tags &&\n              tags.length > 0 &&\n              tags.map(tag => (\n                <li key={tag}>\n                  <Link to={`/tag/${slugify(tag)}`}>\n                    <Badge color=\"primary\" className=\"text-uppercase\" pill>\n                      {tag}\n                    </Badge>\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n        {/* <CardText>\n          <Link to={`/${slug}`}>{body}</Link>\n        </CardText> */}\n        {/* <Link to={slug} className=\"btn btn-outline-primary float-right\">\n          Read more\n        </Link> */}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Post\n","// eg)Web Design => web-design\nfunction slugify(str) {\n  str = str.replace(/^\\s+|\\s+$/g, \"\") // trim\n  str = str.toLowerCase()\n\n  // remove accents, swap ñ for n, etc\n  var from = \"åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;\"\n  var to = \"aaaaaaeeeeiiiioooouuuunc------\"\n\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i))\n  }\n\n  str = str\n    .replace(/[^a-z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣 -]/g, \"\") // remove invalid chars\n    .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n    .replace(/-+/g, \"-\") // collapse dashes\n    .replace(/^-+/, \"\") // trim - from start of text\n    .replace(/-+$/, \"\") // trim - from end of text\n\n  return str\n}\n\n// gatsby-node.js 를 사용하기 때문에 es5 export 사용\nmodule.exports = { slugify }\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardSubtitle = function CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardSubtitle.defaultProps = defaultProps;\nexport default CardSubtitle;"],"sourceRoot":""}