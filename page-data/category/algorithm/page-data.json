{"componentChunkName":"component---src-templates-category-posts-js","path":"/category/algorithm","result":{"data":{"allMarkdownRemark":{"totalCount":47,"edges":[{"node":{"id":"2d542b93-d999-5af9-899f-43633cf606dc","frontmatter":{"title":"recursion_0-1배낭","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-0-1배낭"},"excerpt":"문제 n개의 물건이 있으며, 각 물건에는 무게, 가격(weight, value)이 정해져 있다.\n이 상점에 도둑이 들어와서 물건을 가져온 배낭 용량 C…"}},{"node":{"id":"29a40ce8-9592-5df4-a4ae-83da04b5f4a8","frontmatter":{"title":"dynamicProgramming_0-1배낭","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-0-1배낭"},"excerpt":"문제 n개의 물건이 있으며, 각 물건에는 무게, 가격(weight, value)이 정해져 있다.\n이 상점에 도둑이 들어와서 물건을 가져온 배낭 용량 C…"}},{"node":{"id":"4cd9a9af-629e-554c-a961-e466866f17c9","frontmatter":{"title":"recursion_철근자르기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-철근자르기"},"excerpt":"문제 길이가 n인 철근이 있을 때 이 철근을 팔아서 얻을 수 있는 이익의 최댓값을 구해보자\n단, 철근은 길이 1에서 길이 n까지 정수의 길이로 나눠 판매할 수 있으며 길이별 가격표가 주어진다. 해결 방법 CODE…"}},{"node":{"id":"2b83adf6-5c8d-5887-8398-b8bd103885f6","frontmatter":{"title":"dynamicProgramming_철근자르기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-철근자르기"},"excerpt":"문제 길이가 n인 철근이 있을 때 이 철근을 팔아서 얻을 수 있는 이익의 최댓값을 구해보자\n단, 철근은 길이 1에서 길이 n까지 정수의 길이로 나눠 판매할 수 있으며 길이별 가격표가 주어진다. 해결 방법 재귀 문제 풀이 로직 예) maxValue(…"}},{"node":{"id":"8bdec1fc-7e30-59e2-9981-6743576c8ddb","frontmatter":{"title":"dynamicProgramming_거스름돈최적화","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","탐욕알고리즘","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-거스름돈최적화"},"excerpt":"문제 105원을 50원, 10원, 5원, 1원…"}},{"node":{"id":"016b8ff0-9e5f-5b18-925f-b729e4da4ae5","frontmatter":{"title":"recursion_최거스름돈최적화","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","recursion","Memoization","탑욕알고리즘","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-최거스름돈최적화"},"excerpt":"문제 105원을 50원, 10원, 5원, 1원 4개 동전으로 최소한의 동전으로 거스를수 있는 방법 구하기 해결 방법 탐욕 알고리즘으로 해결 할 수 있다. 50원짜리 동전을 사용할 수 있을 때까지 사용한다. 그다음 액면가인 1…"}},{"node":{"id":"88561e8e-398e-5b11-8b5a-c79a4b6d8dea","frontmatter":{"title":"dynamicProgramming_최장 공통 부분 수열 문자열 출력하기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-최장-공통-부분-수열-문자열-출력하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\nLCS의 문자열을 구해보자 해결 방법 최장 공통 부분 수열 길이를 다이내믹 프로그래밍으로 구했을때\n거꾸로 좌상단 행까지 경로를 따라 이동해 가면서 LCS…"}},{"node":{"id":"1b314a3d-767a-593f-bdf5-95d1287921be","frontmatter":{"title":"dynamicProgramming_최장 공통 부분 수열 길이 구하기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-최장-공통-부분-수열-길이-구하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\n문자열 내에서 왼쪽에서 오른쪽 방향으로 문자열 내에 들어 잇는 글자의 수열\n반드시 연속적인 글자들로 구성될 필요 x 예 해결 방법…"}},{"node":{"id":"3436135a-c2ea-532e-a8b3-ac9b3c9f53db","frontmatter":{"title":"recursion_최장 공통 부분 수열 길이 구하기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","Memoization","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-최장-공통-부분-수열-길이-구하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\n문자열 내에서 왼쪽에서 오른쪽 방향으로 문자열 내에 들어 잇는 글자의 수열\n반드시 연속적인 글자들로 구성될 필요 x…"}},{"node":{"id":"af0dcc87-98ae-5a6f-9ef3-918b9898e9a4","frontmatter":{"title":"recursion_부분집합의합구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-부분집합의합구하기"},"excerpt":"문제 0과 양의 정수로 이루어진 집합이 있고 또 다른 양의 정수 X가 있다. 주어진 집합의 부분집합중에 원소의 합이 X인 부분집합이 존재하는지 검사를 하는 함수 예로 집합 {3,2,7,1}이고 X가 6인 경우, 한 부분집합 {3,2,…"}},{"node":{"id":"bd1eb912-eabf-59c9-9569-2214b9a9d2f0","frontmatter":{"title":"dynamicProgramming_부분집합의합구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-부분집합의합구하기"},"excerpt":"문제 0과 양의 정수로 이루어진 집합이 있고 또 다른 양의 정수 X가 있다. 주어진 집합의 부분집합중에 원소의 합이 X인 부분집합이 존재하는지 검사를 하는 함수 예로 집합 {3,2,7,1}이고 X가 6인 경우, 한 부분집합 {3,2,…"}},{"node":{"id":"5fc86ff8-3aa8-52e9-bfde-33259f4b17c6","frontmatter":{"title":"dynamicProgramming_문자열인터리빙확인문제","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-문자열인터리빙확인문제"},"excerpt":"문제 주어진 두 문자(str1, str2)가 순서를 유지하고 섞었을때 str3이 되는가? 해결 방법 상향식 방법으로 str1, str2 길이만큼 순회하면서 str3와 비교하면서 아래 4가지 조건을 확인하며 각 셀마다 인터리빙이 되는지 확인한다. str…"}},{"node":{"id":"d80a8e7b-898c-5aa6-98fb-d79c012a7d9f","frontmatter":{"title":"recursion_문자열인터리빙확인문제","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-문자열인터리빙확인문제"},"excerpt":"문제 주어진 두 문자(str1, str2)가 순서를 유지하고 섞었을때 str3이 되는가? 해결 방법 아래 두가지 경우에 재귀 호출을 하면서 str1, str2의 모든 경우의 수를 확인하면서 인터리빙인지 확인한다. str1의 첫 글자와 str…"}},{"node":{"id":"bd8975cf-a710-56e0-baea-ab5ae10e99c7","frontmatter":{"title":"dynamicProgramming_직사각형에서총경로수구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-직사각형에서총경로수구하기"},"excerpt":"문제 해결 방법 CODE 2중 반복문 이후 최종 cache 배열(상향식 접근방법) numOfPaths(2, 3) 호출이후 cache 배열의 변화 과정"}},{"node":{"id":"3e36d18a-d776-5a49-916e-774000231c21","frontmatter":{"title":"recursion_직사각형에서총경로수구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-직사각형에서총경로수구하기"},"excerpt":"문제 M X N개의 방으로 구성된 직사각형이 있을 때 좌상단 방에서 우하단 방까지 이동하는 모든 경로의 수를 구한다. 단 이동은 오른쪽, 아래 방향으로만 이동가능 해결 방법 방(m, n)은 다은 두방에서 접근이 가능 바로 위방 방: 방(m-1, n…"}},{"node":{"id":"1552495d-bad2-581a-b3f7-b77639d3b130","frontmatter":{"title":"recursion_문자열최소교정비용","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-문자열최소교정비용"},"excerpt":"문제 두 단어가 주어지며 \"삽입, 삭제, 치환\"을통해서 같게 만들기 위한 최소 교정 비용을 구하는 문제 해결 방법 작은 문제를 사용해 큰 문제를 정의\nstr1, str…"}},{"node":{"id":"b0d96d66-806b-57dd-b452-6ec4338a71be","frontmatter":{"title":"dynamicProgramming_문자열최소교정비용","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm","image":null},"fields":{"slug":"dynamicprogramming-문자열최소교정비용"},"excerpt":"문제 두 단어가 주어지며 \"삽입, 삭제, 치환\"을통해서 같게 만들기 위한 최소 교정 비용을 구하는 문제 해결 방법 두글자가 같으면 교정 비용의 차이가 없으므로 대각선 방향 값을 가지고 온다. (예로 'SUND', 'SATURD'의 교정 비용과 'SUN…"}},{"node":{"id":"333c01a5-7b53-594a-9b48-13dd8afb1388","frontmatter":{"title":"recursion_09.미로찾기","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-09미로찾기"},"excerpt":"문제 N*N 크기의 미로에서 0,0 부터 시작해서 N,N까지 도착 가능 여부를 확인 해결 방법1 POINT1 : 미로 밖 여부 확인 POINT2 : 길이 아닌경우(벽, 가본길, 막힌길) POINT3 : 출구 POINT…"}},{"node":{"id":"dfe3b868-cb0b-5943-a384-681130e13340","frontmatter":{"title":"recursion_07.최대값찾기","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-07최대값찾기"},"excerpt":"문제 주어진 배열 요소중 몇번째 요소가 가장 큰 수인지 확인하기 해결방법 두가지 첫번재 : recursion 두번째 : binary search와 비슷한 방법 해결 방법1 POINT1: 배열의 시작점(begin)과 나머지것들과의 Math.max…"}},{"node":{"id":"83e1f921-0a21-56f7-89c7-e3b527eb1a14","frontmatter":{"title":"recursion_06.순차탐색","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-06순차탐색"},"excerpt":"문제 주어진 배열 요소가 몇번째 인지 확인(순차탐색) 해결방법이 두가지가 있다. 첫번재 : recursion 두번째 : binary search와 비슷한 방법 세번째 : 배열 순회 중요 매개변수를 명시화 하자 ! recursion…"}},{"node":{"id":"ef4c7cc9-42ab-5089-8002-82f565437d5d","frontmatter":{"title":"recursion_04.이진수변환","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-04이진수변환"},"excerpt":"문제 십진수를 이진수로 변환하여 출력 해결 방법 음이 아닌 정수 n을 이진수로 변환하여 인쇄 POINT1: n을 2로 나눈 몫을 먼저 2진수로 변환하여 인쇄한 후 POINT2: n을…"}},{"node":{"id":"cdbf65e4-335a-5626-99a5-0118ef29aafb","frontmatter":{"title":"recursion_08.binarySearch","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-08binarysearch"},"excerpt":"문제 merge 정렬 해결 방법1 POINT1: 배열에서 절반을 나누고 절반 index에 해당하는 요소가 target 요소와 비교해서 배열의 왼쪽, 오른쪽을 검색할 것인지 정한다. POINT2: POINT1 과정을 recursion…"}},{"node":{"id":"a95fa6e2-4e0d-552d-ab5a-793e76f44332","frontmatter":{"title":"recursion_05.배열의합","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-05배열의합"},"excerpt":"문제 배열의 숫자 요소를 모두 더하기 해결 방법 arr0 ... arrn-1 까지의 합을 구하여 반환 CODE"}},{"node":{"id":"a9b4fd1e-becc-5f7f-bcf5-2b1dd1e68bf5","frontmatter":{"title":"recursion_03.문자열(뒤집어)프린트","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-03문자열뒤집어프린트"},"excerpt":"문제 문자열 프린트 문자열 뒤집어 프린트 해결 방법 POINT1: recursion 전에 프린트하면 문자열 앞에서부터 프린트 POINT2: recursion…"}},{"node":{"id":"67ca05de-0cc8-5db1-ae97-e1aa1fc85dbf","frontmatter":{"title":"recursion_02.문자열길이계산","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-02문자열길이계산"},"excerpt":"문제 문자열 길이 계산 해결 방법 CODE recursion stack"}},{"node":{"id":"98a3b72e-54a7-54b4-9bb3-af2fe6351083","frontmatter":{"title":"recursion_11.nQueens","date":"June 27th 2020","author":"jyoon","tags":["완전탐색","DFS","recursion","BackTracking"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-11nqueens"},"excerpt":"n-Queens 설명 NxN의 체스판에 N개의 퀸을 서로 공격하지 않게 놓는 방법 혹은 그 수를 구하는 문제 퀸은 가로, 세로, 대각선 공격할 수 있다. , , , 이 필요 DFS…"}},{"node":{"id":"240b5788-a6c6-517f-ad1c-9c97a52b69fc","frontmatter":{"title":"recursion_10.CountingCells in a blob","date":"June 27th 2020","author":"jyoon","tags":["dynamicProgramming","recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-10countingcells-in-a-blob"},"excerpt":"문제  Binary 이미지 각 필셀은 background pixel이거나 혹은 imgage, pixel 서로 연결된 image pixel들의 집합을 blob이라고 부름 상하좌우 및 대각방향으로도 연결된것으로 간주. 해결 방법1  입력 N*N 크기의…"}},{"node":{"id":"51050df8-2a53-526b-83e8-3affee78cd11","frontmatter":{"title":"recursion_01.최대공약수","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"category":"Algorithm","image":null},"fields":{"slug":"recursion-01최대공약수"},"excerpt":"문제 최대 공약수 구하기 해결 방법1 m >= n인 두 양의 정수 m과 n에 대해서 m이 n의 배수면 gcd(m,n)=n 이고 그렇지 않으면 gcd(m, n) = gcd(n, m%n)이다. CODE1 해결 방법2 gcd(p, q) = p if q=…"}},{"node":{"id":"8d3bf9f8-3797-5a9c-aa27-ab2319edf003","frontmatter":{"title":"정렬_quickSort","date":"May 16th 2020","author":"jyoon","tags":["sort"],"category":"Algorithm","image":null},"fields":{"slug":"정렬-quicksort"},"excerpt":"문제 quick_sort Quick Sort에 대해서 QuickSort is a Divide and Conquer algorithm.  It picks an element as pivot and partitions the given array…"}},{"node":{"id":"e9a55fe4-6cfd-5e88-8dac-881f516f53a6","frontmatter":{"title":"정렬_ArrayConsisting 0s,1s,2s","date":"May 16th 2020","author":"jyoon","tags":["sort"],"category":"Algorithm","image":null},"fields":{"slug":"정렬-arrayconsisting-0s-1s-2s"},"excerpt":"문제 Given an array A[] consisting 0s, 1s and 2s.\nThe task is to write a function that sorts the given array. \nThe functions should put all 0s…"}},{"node":{"id":"044f0f08-4019-5f26-8ca3-c2db7327334e","frontmatter":{"title":"재귀_모든 문자배열 조합(permutation)","date":"May 16th 2020","author":"jyoon","tags":["permutation","dynamicProgramming","recursion"],"category":"Algorithm","image":null},"fields":{"slug":"재귀-모든-문자배열-조합permutation"},"excerpt":"문제 Write a program to print all permutations of a given string 해결 방법 문자열의 기준을 정하고 \"swap, 재귀호출\"을 통해서 문자열 자리수를 정하면서 문자열 순열을 구한다. POINT1: l, r…"}},{"node":{"id":"dc3d8c2b-7a8d-50d8-8eb9-83e8171ad09e","frontmatter":{"title":"재귀_Recursion 개념과 기본예제, 응용 배우기","date":"April 10th 2020","author":"jyoon","tags":["recursion","동적프로그래밍"],"category":"Algorithm","image":null},"fields":{"slug":"재귀-recursion-개념과-기본예제-응용-배우기"},"excerpt":"1. 순환이란? (what is Recursion?) https://www.youtube.com/watch?v=YZcO_jRhvxs 수학적 문제를 recursion으로 풀어보기 Fibonacci Number 최대 공약수\n2.1 Euclid Method…"}},{"node":{"id":"dfbf8ac3-79d5-5679-ae30-344959b23f0e","frontmatter":{"title":"스택,큐_배포시 배포 가능한 기능 개수 구하기","date":"March 21st 2020","author":"jyoon","tags":["스택,큐"],"category":"Algorithm","image":null},"fields":{"slug":"스택-큐-배포시-배포-가능한-기능-개수-구하기"},"excerpt":"문제 설명 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 10…"}},{"node":{"id":"be3ea7e4-864c-5709-abc1-183e814d76ff","frontmatter":{"title":"스택,큐_다리위로 트럭지나가기","date":"March 21st 2020","author":"jyoon","tags":["스택,큐"],"category":"Algorithm","image":null},"fields":{"slug":"스택-큐-다리위로-트럭지나가기"},"excerpt":"문제 설명 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다.\n모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다.\n트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length…"}},{"node":{"id":"03fe5744-a51b-5930-a72c-260ef2cf8a0a","frontmatter":{"title":"스택,큐_송수신탑","date":"March 21st 2020","author":"jyoon","tags":["스택,큐"],"category":"Algorithm","image":null},"fields":{"slug":"스택-큐-송수신탑"},"excerpt":"문제 설명 수평 직선에 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다. 예를 들어 높이가…"}},{"node":{"id":"d1dab9c5-ac6d-572b-b480-6dcc6a5c453d","frontmatter":{"title":"스택,큐_우선순위 알고리즘이 있는 프린터","date":"March 21st 2020","author":"jyoon","tags":["스택,큐"],"category":"Algorithm","image":null},"fields":{"slug":"스택-큐-우선순위-알고리즘이-있는-프린터"},"excerpt":"…"}},{"node":{"id":"1189d71e-c407-5bcd-b769-fdbb2effbc13","frontmatter":{"title":"BinaryGap","date":"March 20th 2020","author":"jyoon","tags":["2진수"],"category":"Algorithm","image":null},"fields":{"slug":"binarygap"},"excerpt":"문제 주어진 10진수를 2진수로 바꾸고 1과 1사이에 0이 가장 많을때 0의 개수를 구하는 문제 해결 방법 10진수 2진수로 만들기 나누기, 나머지 연산자: %, /연산자 Math.floor: 소수점 버리기 2진수 순회하면서 1과 1사이…"}},{"node":{"id":"53cb9653-7299-5fb4-99e2-ab5ad75e9a04","frontmatter":{"title":"동적프로그래밍_최소거스름돈","date":"March 19th 2020","author":"jyoon","tags":["dynamicProgramming","recursion"],"category":"Algorithm","image":null},"fields":{"slug":"동적프로그래밍-최소거스름돈"},"excerpt":"리뷰 동적 프로그래밍(POINT5,6,7), 거스름돈 최적 케이스 조건3(POINT8,9,10)을 고민하는데 시간이 소요 됐으며 동적 프로그래밍 보다 최적케이스조건중 POINT9번을 생각하는데 더 시간 소요 됐다. 문제 주어진 금액을 동전 d1, d…"}},{"node":{"id":"c7f65f5d-7b0e-5a30-bf20-c284a8545e49","frontmatter":{"title":"동적프로그래밍_피보나치 수열","date":"March 19th 2020","author":"jyoon","tags":["fibonacci","dynamicProgramming","recursion"],"category":"Algorithm","image":null},"fields":{"slug":"동적프로그래밍-피보나치-수열"},"excerpt":"문제 문제 배열의 숫자들을 숫자별로 내림차순으로 정렬한다. 해결 방법 num이 1,2일때 '베이스 케이스' fib(n) = fib(n-1) + fib(n-2); CODE - 재귀호출 방법 CODE - 재귀호출 아닌 방식 fibonacci tree…"}},{"node":{"id":"324f6144-db3a-5a02-9b68-3e0aa6f06b5b","frontmatter":{"title":"재귀","date":"March 19th 2020","author":"jyoon","tags":["재귀","recursion"],"category":"Algorithm","image":null},"fields":{"slug":"재귀"},"excerpt":"…"}},{"node":{"id":"6a467269-4030-52e0-883f-40e248db247d","frontmatter":{"title":"동적프로그래밍 설명","date":"March 19th 2020","author":"jyoon","tags":["동적프로그래밍"],"category":"Algorithm","image":null},"fields":{"slug":"동적프로그래밍-설명"},"excerpt":"동적 프로그래밍이란? 동적 프로그래밍은 복잡한 문제를 작은 하위 문제들로 나누어 푸는 최적화기법 DFS…"}},{"node":{"id":"dd7e9485-009e-5578-811d-99bded72d0ec","frontmatter":{"title":"정렬_K번째 수 구하기","date":"February 25th 2020","author":"jyoon","tags":["sort"],"category":"Algorithm","image":null},"fields":{"slug":"정렬-k번째-수-구하기"},"excerpt":"문제 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하라 제한사항 해결 방법 map을 이용해 주어진 배열을 가공해 새로운 배열을 만든다. 주어진 배열을 자르기 위해서, k…"}},{"node":{"id":"6ce042bf-4b43-5158-8c3b-94c76715015f","frontmatter":{"title":"정렬_교수의 논문 인용단위 HIndex 구하기","date":"February 25th 2020","author":"jyoon","tags":["sort"],"category":"Algorithm","image":null},"fields":{"slug":"정렬-교수의-논문-인용단위-hindex-구하기"},"excerpt":"문제 H-Index를 구하라! H-Index란? 어떤 과학자가 발표한 논문 n편 중, h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 h가 이 과학자의 H-Index입니다. 해결 방법 논문이 \"h번 이상 인용된 논문이 h…"}},{"node":{"id":"09099024-bcf1-55b6-ad1a-efeb006b917f","frontmatter":{"title":"정렬_배열로 조합할 수 있는 수중 가장 큰 수 구하기","date":"February 25th 2020","author":"jyoon","tags":["sort"],"category":"Algorithm","image":null},"fields":{"slug":"정렬-배열로-조합할-수-있는-수중-가장-큰-수-구하기"},"excerpt":"문제 문제 배열의 숫자들을 숫자별로 내림차순으로 정렬한다. 해결 방법 배열의 숫자를 문자형으로 바꾸고 자리를 바꿔가며 문자를 조합하고 숫자형으로 다시 변환한뒤 숫자 크기를 비교한다 STEP STEP1: 배열의 숫자형을 문자형으로 변환 STEP…"}},{"node":{"id":"e730feb6-f7eb-560a-85ef-cc68bb52f9d0","frontmatter":{"title":"완전탐색_숫자야구","date":"February 24th 2020","author":"jyoon","tags":["완전탐색"],"category":"Algorithm","image":null},"fields":{"slug":"완전탐색-숫자야구"},"excerpt":"문제 제한사항 질문의 수는 1 이상 100 이하의 자연수입니다. baseball의 각 행은 세 자리의 수, 스트라이크의 수, 볼의 수를 담고 있습니다. 입출력 예 해결 방법 for문 2개 outer for: 예상할 수 있는 3자리 숫자 Array…"}},{"node":{"id":"fa512128-52d3-595c-aa47-9e42ad53b19a","frontmatter":{"title":"완전탐색_모든 숫자조합 구해서 소수찾기","date":"February 24th 2020","author":"jyoon","tags":["완전탐색"],"category":"Algorithm","image":null},"fields":{"slug":"완전탐색-모든-숫자조합-구해서-소수찾기"},"excerpt":"문제 한자리 숫자가 적힌 종이 조각이 흩어져있습니다.\n흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.\n각 종이 조각에 적힌 숫자가 적힌 문자열 numbers…"}},{"node":{"id":"159b211c-d740-5731-b45f-45c08678e22e","frontmatter":{"title":"완전탐색_누가 더 잘찍을까?","date":"February 24th 2020","author":"jyoon","tags":["완전탐색"],"category":"Algorithm","image":null},"fields":{"slug":"완전탐색-누가-더-잘찍을까"},"excerpt":"문제 학생 3명이 있고 각각 찍는 방법이 각각 다르고 그중 누가 제일 잘찍는지 확인하는 문제 해결 방법 학생3명 찍는 방법 배열과 정답 리스트를 비교하면서 학생마다 맞힌 정답 배열길이를 새로운 배열에 push 그 결과를 Math.max…"}}]}},"pageContext":{"category":"Algorithm"}},"staticQueryHashes":["3542266321","3649515864"]}