{"componentChunkName":"component---src-templates-categories-page-js","path":"/category","result":{"data":{"allMarkdownRemark":{"totalCount":157,"edges":[{"node":{"id":"47eb9213-d0af-59de-9c4c-6d7445630aee","frontmatter":{"title":"07_DoublyLinkedList","author":"jyoon","date":"Aug 23rd 2020","tags":["DataStructure","JavaScript"],"category":"DataStructure"},"fields":{"slug":"07-doublylinkedlist"},"excerpt":"git   전체 구현 코드와 테스트 코드 설명 각 노드에 next, prev 포인터가 있어 이전, 다음 노드를 가르키는 구조 실행 시간에 메모리를 할당, 해제 가능한 동적 자료구조 (배열은 고정된 크기를 갖는다.) 구조  time complexity…"}},{"node":{"id":"d6b4e97c-b73c-5f50-94b8-6392ac4657f7","frontmatter":{"title":"07_SinglyLinkedList","author":"jyoon","date":"Aug 23rd 2020","tags":["DataStructure","JavaScript"],"category":"DataStructure"},"fields":{"slug":"07-singlylinkedlist"},"excerpt":"git   전체 구현 코드와 테스트 코드 설명 각 노드가 다음 노드를 가르키는 자료구조  실행 시간에 메모리를 할당, 해제 가능한 동적 자료구조 (배열은 고정된 크기를 갖는다.) 구조  time complexity  구현 List node…"}},{"node":{"id":"fe35b71a-6668-5ef0-9942-79d380c93d00","frontmatter":{"title":"09_Grpah","author":"jyoon","date":"Aug 23rd 2020","tags":["DataStructure","JavaScript"],"category":"DataStructure"},"fields":{"slug":"09-grpah"},"excerpt":"git…"}},{"node":{"id":"ec36b61e-d89a-5230-9494-3fc4ddca8573","frontmatter":{"title":"09_Tree","author":"jyoon","date":"Aug 23rd 2020","tags":["DataStructure","JavaScript"],"category":"DataStructure"},"fields":{"slug":"09-tree"},"excerpt":"git   전체 구현 코드와 테스트 코드 설명 Tree 순회 다음 네가지 종류가 있다.(traversePreOrder, traverseInOrder, traversePostOrder, traverseLevelOrder) BinarySearchTree…"}},{"node":{"id":"68357184-2e37-528b-a3e3-bc596ea26ef5","frontmatter":{"title":"10_Heap","author":"jyoon","date":"Aug 23rd 2020","tags":["DataStructure","JavaScript"],"category":"DataStructure"},"fields":{"slug":"10-heap"},"excerpt":"git…"}},{"node":{"id":"a716e2e8-b2c7-5206-8ff3-033d7fa29f48","frontmatter":{"title":"2104 TIL","author":"jyoon","date":"Apr 1st 2021","tags":["TIL"],"category":"TIL"},"fields":{"slug":"2104-til"},"excerpt":"210430 CSScssText   dom.style.cssText = ; CSStransform & transition 용어의 의미 transform - animation\n  : 모양 변경( applies a 2D or 3D…"}},{"node":{"id":"5b93a2a1-e121-5ae4-b7f8-3fe842e422fb","frontmatter":{"title":"2105 TIL","author":"jyoon","date":"May 1st 2021","tags":["TIL"],"category":"TIL"},"fields":{"slug":"2105-til"},"excerpt":"210531 - MON Node.nextSibling querySelector in js outerHTML, innherHTML, innerTEXT transfer Elements dom to string (Elements.outerHTML) drag…"}},{"node":{"id":"c57c8322-9bac-597f-afec-72a5a6466e0d","frontmatter":{"title":"2106 TIL","author":"jyoon","date":"Jun 1st 2021","tags":["TIL"],"category":"TIL"},"fields":{"slug":"2106-til"},"excerpt":"21052…"}},{"node":{"id":"ed34ff0e-b40f-5490-a49f-ed4fa55b2a30","frontmatter":{"title":"2107 TIL","author":"jyoon","date":"Jul 1st 2021","tags":["TIL"],"category":"TIL"},"fields":{"slug":"2107-til"},"excerpt":"210728 gatsby markdown에 3rd level unorder리스트가 2nd level 아이콘으로 표시 되는 경우 2018년에 문제가 제기 됐지만 큰 볼륨의 문제라 문제제기를 close했다. gatsby-transformer-remark…"}},{"node":{"id":"93e2e3e6-8561-5ba1-b14a-05b91c436510","frontmatter":{"title":"Apollo GraphQl CRUD in project","author":"jyoon","date":"Jun 15th 2020","tags":["ToyProjReview","Instagram clone coding2","apollo","graphql","apollo-graphql"],"category":"ToyProj"},"fields":{"slug":"apollo-graphql-crud-in-project"},"excerpt":"apollo GraphQl CRUD 에 대해서 react-redux를 사용할때는 connect를 이용 mapDispatchToProps를 통해서 redux로 갔다가 다시 return받은걸 mapStateToProps 로 받아서 presentation…"}},{"node":{"id":"6ad140ab-afb8-573d-86f9-c413f13b27f3","frontmatter":{"title":"Arrow Function","author":"jyoon","date":"Mar 15th 2020","tags":["Arrow Function"],"category":"ES6"},"fields":{"slug":"arrow-function"},"excerpt":"1. 화살표 함수와 일반함수의 차이점 선언 방법이 다르다. return 부분을 확인해보자 화살표, 일반함수에서 this의 scope영역이 다르다. 화살표 함수는 상위 this scope을 가르킨다. 화살표 함수를 사용하지 말아야할…"}},{"node":{"id":"b342f5df-309c-5333-912f-111339db04bc","frontmatter":{"title":"Async/Await","author":"jyoon","date":"Feb 16th 2020","tags":["Promise","Async/Await","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"async-await"},"excerpt":"async 함수 function 앞에 async를 붙이면 해당 함수는 항상 promise 객체를 반환한다. 명시적으로 Promise 반환 가능, 결과 동일 await 키워드 await는 async 함수 안에서만 동작 자바스크립트는 await…"}},{"node":{"id":"ff4d1b1a-f6e6-588b-bdb0-d0dfd785407f","frontmatter":{"title":"BehavioralPattern_01.ChainOfResponsibility","author":"jyoon","date":"Oct 11th 2020","tags":["ChainOfResponsibility","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-01chainofresponsibility"},"excerpt":"def 객체 결합을 줄인다.  chain of responsibility는 이벤트 버블링과 같다.(선택한 이벤트가 연속적으로 중첩된 컨트롤들로 증식해 나가기 때문이다.) Javascript에서 자주 사용되는 Chaining pattern…"}},{"node":{"id":"d810f0ae-a52f-5cf6-8913-68fa3871d5d6","frontmatter":{"title":"BehavioralPattern_02.Command","author":"jyoon","date":"Oct 11th 2020","tags":["Command","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-02command"},"excerpt":"def…"}},{"node":{"id":"770bed3c-bb1a-524c-a4d7-9ada3e7dd7c9","frontmatter":{"title":"BehavioralPattern_03.Interpreter","author":"jyoon","date":"Oct 11th 2020","tags":["Interpreter","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-03interpreter"},"excerpt":"def POINT2 인터프리터 패턴은 최종사용자가 그들의 솔루션을 customize…"}},{"node":{"id":"ccf5239f-e232-53d7-afd5-311feb71ce46","frontmatter":{"title":"BehavioralPattern_04.Iterator","author":"jyoon","date":"Oct 11th 2020","tags":["Iterator","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-04iterator"},"excerpt":"def 사용자가 효고적으로 반복분(collection 객체) 사용할 수 있도록 돕는다.   흔한 프로그래밍 task로 collection 객체를 순회하는 것이다. 이런 collection 들은 아마 배열 또는 좀더 복잡한 tree, graph…"}},{"node":{"id":"41b476fa-1109-5b9b-8081-25296540f68d","frontmatter":{"title":"BehavioralPattern_05.Mediator","author":"jyoon","date":"Oct 11th 2020","tags":["Mediator","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-05mediator"},"excerpt":"def Mediator…"}},{"node":{"id":"20f90095-28e1-5866-bd10-c6187d5e8b0a","frontmatter":{"title":"BehavioralPattern_06.Memento","author":"jyoon","date":"Oct 11th 2020","tags":["Memento","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-06memento"},"excerpt":"def Memento 패턴은 객체의 복원뿐만 아니라 임시 저장소를 제공한다. 이런 메커니즘은 state 객체를 저장하는 것을 필요로 하게 지속 기간에 따라 다르며 다를 수 있다.   객체가 유지되고 복원되는 Memento…"}},{"node":{"id":"e6f95539-b1c5-53bd-a35b-046a8197e9b3","frontmatter":{"title":"BehavioralPattern_07.Observer","author":"jyoon","date":"Oct 11th 2020","tags":["Observer","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-07observer"},"excerpt":"def Observer 패턴은 객체가 이벤트를 구독하고 이벤트 발생시 알림을받는 구독 모델을 제공한다. 이 패턴은 JavaScript를 포함한 이벤트 기반 프로그래밍의 초석이다. Observer…"}},{"node":{"id":"38ef1c8b-230f-5b10-b91d-6c5f3da83ad8","frontmatter":{"title":"BehavioralPattern_08.State","author":"jyoon","date":"Oct 11th 2020","tags":["State","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-08state"},"excerpt":"def State 패턴은 각 객체가 특정 상태를 나타내는 제한된 객체 집합에 상태 별 로직을 제공한다.   예1 고객이 온라인으로 TV를 주문한다고 가정했을 때   이 주문이 처리되는 동안 new…"}},{"node":{"id":"4733c012-e36d-585e-a402-aaa051b3937f","frontmatter":{"title":"BehavioralPattern_09.Strategy","author":"jyoon","date":"Oct 11th 2020","tags":["Strategy","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-09strategy"},"excerpt":"def…"}},{"node":{"id":"54b9c124-62aa-52df-a7c7-cf15fa6522f9","frontmatter":{"title":"BehavioralPattern_10.Template Method","author":"jyoon","date":"Oct 11th 2020","tags":["Template Method","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-10template-method"},"excerpt":"def…"}},{"node":{"id":"406683d1-f85b-54f4-b57d-72065358361a","frontmatter":{"title":"BehavioralPattern_11.Visitor","author":"jyoon","date":"Oct 11th 2020","tags":["Visitor","DesignPattern","BehavioralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"behavioralpattern-11visitor"},"excerpt":"def…"}},{"node":{"id":"1189d71e-c407-5bcd-b769-fdbb2effbc13","frontmatter":{"title":"BinaryGap","author":"jyoon","date":"Mar 20th 2020","tags":["2진수"],"category":"Algorithm"},"fields":{"slug":"binarygap"},"excerpt":"문제 주어진 10진수를 2진수로 바꾸고 1과 1사이에 0이 가장 많을때 0의 개수를 구하는 문제 해결 방법 10진수 2진수로 만들기 나누기, 나머지 연산자: %, /연산자 Math.floor: 소수점 버리기 2진수 순회하면서 1과 1사이…"}},{"node":{"id":"d8697a03-26cb-5d12-8ce7-c339df146172","frontmatter":{"title":"COMPONENT STRUCTURE in project","author":"jyoon","date":"Jun 15th 2020","tags":["ToyProjReview","Instagram clone coding2"],"category":"ToyProj"},"fields":{"slug":"component-structure-in-project"},"excerpt":"메인 화면 캡쳐  기술스택 React(Hooks, graphQl) + Express(Prisma) + Prisma(apollo) styled-components 프로젝트 컴포넌트 구조 ApolloProvider App Header…"}},{"node":{"id":"9201471f-693f-5d28-9959-3d65a725a15d","frontmatter":{"title":"CreationalPattern_01.AbstractFactory","author":"jyoon","date":"Oct 8th 2020","tags":["AbstractFactory","DesignPattern","CreationalPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"creationalpattern-01abstractfactory"},"excerpt":"def   공통된 속성과 관련된 객체를 만드는 패턴이다.   객제지향 프로그래밍에서 팩토리는 다른 객체를 생성하는 객체이다.   Abstract Factory는 새로 생성 된 객체가 공유하는 주제를 추상화했다.     button, textbox…"}},{"node":{"id":"99905c22-3614-5826-b808-7c1d1f4e421e","frontmatter":{"title":"CreationalPattern_02.Builder","author":"jyoon","date":"Oct 8th 2020","tags":["Builder","DesignPattern","CreationalPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"creationalpattern-02builder"},"excerpt":"def Builder 패턴을 사용하면 클라이언트가 유형과 콘텐츠만 지정하여 복잡한 객체를 구성 할 수 있다. Construction 세부 사항은 클라이언트에게 완전히 숨겨진다.   Builder…"}},{"node":{"id":"fd8bbe93-d0f1-5f4b-88b7-b21bcd0337d1","frontmatter":{"title":"CreationalPattern_03.Factory Method","author":"jyoon","date":"Oct 8th 2020","tags":["FactoryMethod","DesignPattern","CreationalPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"creationalpattern-03factory-method"},"excerpt":"def Factory pattern은 사용자가(클라이언트) 원하는대로 새로운 객체를 생성한다. 객체를 생성하는 방법은 new…"}},{"node":{"id":"9e711676-e08f-5ed1-9d59-19cb45511c6c","frontmatter":{"title":"CreationalPattern_04.Prototype","author":"jyoon","date":"Oct 8th 2020","tags":["Prototype","DesignPattern","CreationalPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"creationalpattern-04prototype"},"excerpt":"def Prototype Pattern은 새로운 객체를 만든다. 객체를 초기화 하지 않은 상태에서 객체를 반환한다. 이것은 초기화되지 않은 객체이며 된다. Prototype pattern은 또한 Property를 패턴을 참조한다.   Prorotype…"}},{"node":{"id":"f6d18e84-3811-5f32-b3bf-febe302b1392","frontmatter":{"title":"CreationalPattern_05.Singlton","author":"jyoon","date":"Oct 8th 2020","tags":["Singlton","DesignPattern","CreationalPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"creationalpattern-05singlton"},"excerpt":"def 싱글톤패턴은 특정 객체의 인스턴스 수를 하나로 제한한다. 이 단일 인스턴스를 singleton pattern이라고한다.   singleton pattern…"}},{"node":{"id":"beef1916-ee9d-5fae-8fbd-49ffa4df3020","frontmatter":{"title":"Data Structure 학습 전략","author":"jyoon","date":"Aug 23rd 2020","tags":["DataStructure","JavaScript"],"category":"DataStructure"},"fields":{"slug":"data-structure-학습-전략"},"excerpt":"마스터 전략 -. 큰틀 b. 디테일 -> 블로그 작성 X. 익숙과정 - 1. 배열 - 2. 재귀 - 3. 집합 - 4. 검색과 정렬 - 4.1 검색 - 4.2 정렬 - 5. 해시테이블 - 6. 스택과 큐 B 7. 연결리스트 B 7.…"}},{"node":{"id":"f5bf3fcb-51cd-5c79-b4c4-522b2d316589","frontmatter":{"title":"Django frameworks","author":"jyoon","date":"May 23rd 2020","tags":["ToyProjReview","Instagram clone coding","Django"],"category":"Django"},"fields":{"slug":"django-frameworks"},"excerpt":"Django overview | Django…"}},{"node":{"id":"5f8dcd5b-4971-553a-93d6-13401470ed78","frontmatter":{"title":"ES6로 배열을 제거 할 수 있는 3가지 방법","author":null,"date":"Jan 20th 2020","tags":["es6","배열","중복 제거"],"category":"Javascript"},"fields":{"slug":"es6로-배열을-제거-할-수-있는-3가지-방법"},"excerpt":"요약 1. Set Set Ojbect는 unique한 값만 저장한다. (primitive values, obejct references 구분 없이) return value A new Set object. Set Object를 array…"}},{"node":{"id":"53ecbd42-d5a1-5811-ba3d-80103752bd96","frontmatter":{"title":"Elon Musk's 2 Reuls For Learning Anythin Faster","author":"jyoon","date":"Jul 9th 2021","tags":["개발자"],"category":"생각정리"},"fields":{"slug":"elon-musks-2-reuls-for-learning-anythin-faster"},"excerpt":"유투브에서 일론머스크가 빠르게 배우기 위한 방법 두가지에 대해서 얘기한 유투브를 봤고 개발자들이 학습할때 도움이 될만한 내용인것 같아서 블로그를 남기게 됐다. 영상: Elon Musk's 2 Reuls For Learning Anythin Faster…"}},{"node":{"id":"a1a43433-7984-59be-9081-ba2691015c50","frontmatter":{"title":"Flex","author":"jyoon","date":"May 29th 2020","tags":["css","flex"],"category":"css"},"fields":{"slug":"flex"},"excerpt":"flex 효과적인 layout을 제공하기위해서 나왔다. container 안에 item들의 정렬, 공간배분, 유동적인 크기 조절 등이 쉬워졌다. 메인 아이디어는 items를 갖는 container에 본인이 가지고 있는 속성의 width/height…"}},{"node":{"id":"ae8d5043-7ce9-55bc-ac94-5615c67609a1","frontmatter":{"title":"Hook in project","author":"jyoon","date":"Jun 15th 2020","tags":["ToyProjReview","Instagram clone coding2","setState","setEffect","customHook"],"category":"ToyProj"},"fields":{"slug":"hook-in-project"},"excerpt":"프로젝트에서 사용한 Hooks 리액트 v16.8에 새로 도입된 기능으로 함수형 컴포넌트에서도 상태 관리를 할 수 있는 useState, 렌더링 직후 작업을 설정하는 useEffect 등 기능을 제공 현재 프로젝트에서는 useState…"}},{"node":{"id":"aaa4f5af-6c4d-568e-85d5-1df5b16a712a","frontmatter":{"title":"Hook1_Hook Basic","author":"jyoon","date":"Jun 23rd 2020","tags":["customHook","useState","useEffect","Hook","React"],"category":"React"},"fields":{"slug":"hook1-hook-basic"},"excerpt":"모든 코드는 git repository에서 확인 가능합니다. 1 리액트 훅 기초 익히기 리액트 버전 16.8에서 추가 됨 1.…"}},{"node":{"id":"c6e07345-f0a9-51d1-b6cd-0e82377055b1","frontmatter":{"title":"Hook2_React 내장 Hook","author":"jyoon","date":"Jun 23rd 2020","tags":["customHook","useState","useEffect","Hook","React"],"category":"React"},"fields":{"slug":"hook2-react-내장-hook"},"excerpt":"모든 코드는 git repository에서 확인 가능합니다. 2. 리액트 내장 훅 살펴보기 2.1 Consumer 컴포넌트 없이 콘텍스트 사용하기: useContext 코드 5-19 훅을 사용하지 않고 콘텍스트 API…"}},{"node":{"id":"6ca75a60-07b3-570f-92f2-c9f5eacfa73c","frontmatter":{"title":"Hook3_Hook, ClassComponent 비교","author":"jyoon","date":"Jun 23rd 2020","tags":["ClassComponent","Hook","React"],"category":"React"},"fields":{"slug":"hook3-hook-classcomponent-비교"},"excerpt":"모든 코드는 git repository에서 확인 가능합니다. 3.2 componentDidUpdate 메서드 코드 5-34 usePrevious 커스텀 훅 ⭐️ usePrevious 설명 코드 5-22 참고  POINT…"}},{"node":{"id":"a628bf79-d169-54c5-b25f-5f8b71e4a2ab","frontmatter":{"title":"Hook4_Class Component 고려한 CustomHook 작성법","author":"jyoon","date":"Jun 23rd 2020","tags":["customHook","classComponent","Hook","React"],"category":"React"},"fields":{"slug":"hook4-class-component-고려한-customhook-작성법"},"excerpt":"모든 코드는 git repository에서 확인 가능합니다. 4.1 커스텀 훅의 반환값이 없는 경우 코드 5-41 디바운스 기능을 제공하는 useDebounce…"}},{"node":{"id":"ac7a9419-75c9-557d-aa0a-fbbc4ae217f5","frontmatter":{"title":"Hub, Switch, Router","author":"jyoon","date":"Jun 11th 2020","tags":["switch"],"category":"Network"},"fields":{"slug":"hub-switch-router"},"excerpt":"Hub, Switch, Router Hub, Switch 로컬 네트워크를 형성할때 사용된다.  로컬 네트워크 밖과 통신하지 않는다.  로컬 네트워크 밖과 통신하기 위해서는 IP주소를 읽을 수 있어야 하는데 hub, switch…"}},{"node":{"id":"6c634ee3-604d-56f4-872f-14127c125ca9","frontmatter":{"title":"Javascript RoadMap","author":"jyoon","date":"Mar 1st 2020","tags":["JavaScript"],"category":"Javascript Core"},"fields":{"slug":"javascript-roadmap"},"excerpt":"javascript Core를 정리하겠다고 마음먹고 제일 먼저 작성한 목록 입니다.\n뭘 정리해 할지 한눈에 보기 편해 정리하는데 확실한 동기부여가 됐습니다.  index execute context Callback function this call…"}},{"node":{"id":"125c1016-daf8-5e64-a73d-795805c028cf","frontmatter":{"title":"Library VS Framework","author":"jyoon","date":"May 23rd 2020","tags":["Library","Framework"],"category":"development"},"fields":{"slug":"library-vs-framework"},"excerpt":"Library vs Framework? 1. Key Difference and Definition of Library and Framework 중요 키워드는 \"Inversion of Control\"이다. method를 호출시 library…"}},{"node":{"id":"d3d572cc-57aa-5480-a18a-02f06605b0b9","frontmatter":{"title":"OSI 7 Layer","author":"jyoon","date":"Jun 4th 2020","tags":["OSI7Layer"],"category":"Network"},"fields":{"slug":"osi-7-layer"},"excerpt":"OSI 7 Layer 국제 표준화기구(OSI)에서 개발하여 컴퓨터 네트워크 프로토콜 디자인 및 통신을 7계층으로 나눈것. 간단히 말해서 프로토콜을 기능별로 나눈것 OSI 7 Layer architecture…"}},{"node":{"id":"b6fe9734-e2f4-5e1b-b24d-1e62f062c1ad","frontmatter":{"title":"PRACTICAL GIT","author":"jyoon","date":"May 20th 2020","tags":["git","practical"],"category":"git"},"fields":{"slug":"practical-git"},"excerpt":"fetch 동작 명령어 REPOSITORY fetch git fetch REPOSITORY remote 전체 업데이트 git fetch -all checkout 동작 명령어 BRANCH NAME으로 branch 변경 git checkout BRANCH…"}},{"node":{"id":"c7ce5ccf-30ae-55f6-9a60-5f218b8424cf","frontmatter":{"title":"Promise","author":"jyoon","date":"Feb 16th 2020","tags":["promise","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"promise"},"excerpt":"javascript info 팬이 가수의 앨범을 사기위해서 아무런 정보 없이 대기 하기 보다는 가수가 앨범을 다만들면 팬들에게 그 소식을 알려 팬이 가수의 앨범을 살수 있다 라는 설명으로 promise로 설명 하고 있습니다. executor…"}},{"node":{"id":"cdd5944e-927d-56eb-a7f1-b5cdabf34bc6","frontmatter":{"title":"Promise chaning","author":"jyoon","date":"Feb 16th 2020","tags":["Promise chaning","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"promise-chaning"},"excerpt":"promise객체에 then을 연속적으로 사용할 수 있는 promise chaining에 대해서 설명하겠습니다. promise chaing 방법 두가지 promise chaining 첫번째 방법(1/2) promise객체의 하나에 then…"}},{"node":{"id":"25186105-6951-56e0-b061-26fa0227a167","frontmatter":{"title":"PropTypes에 대해서(vs Typescript)","author":"jyoon","date":"Jun 2nd 2020","tags":["PropTypes","TypeScript","react"],"category":"React"},"fields":{"slug":"proptypes에-대해서vs-typescript"},"excerpt":"Typescript, PropsTypes 설명 Typescript, PropTypes의 validate 시점 차이  Typescript: compile time PropsTypes: runtime PropTypes를 쓰면 좋은점  API…"}},{"node":{"id":"d2bdce9e-1016-5dd7-81c6-556b0f6c2420","frontmatter":{"title":"Protocol","author":"jyoon","date":"Jun 4th 2020","tags":["protocol"],"category":"Network"},"fields":{"slug":"protocol"},"excerpt":"프로토콜이란? 컴퓨터, 단말기 사이에서 데이터 통신을 원활하게 하기 위해서 필요한 통신규약, 신호송신의 순서, 데이터 표현법 프로토콜의 기능 캡슐화(encapsulation) 흐름제어(flow control) 연결제어(connection control…"}},{"node":{"id":"b67e3ab8-0abe-5288-867e-648a0ea55622","frontmatter":{"title":"Python virtual environment","author":"jyoon","date":"May 23rd 2020","tags":["ToyProjReview","Instagram clone coding"],"category":"Python"},"fields":{"slug":"python-virtual-environment"},"excerpt":"Python virtual environment  가상개발환경 env#1, env#2는 각각 다른 개발환경을 가지고 있다. 이렇게 한 로컬 안에 다른 개발환경을 갖게 하기위해서 virtual environment…"}},{"node":{"id":"139c22af-d385-564c-a3ee-43478c794c18","frontmatter":{"title":"RESET Django virtural Environment","author":"jyoon","date":"May 23rd 2020","tags":["ToyProjReview","Instagram clone coding","workaround"],"category":"Django"},"fields":{"slug":"reset-django-virtural-environment"},"excerpt":"Django 가상환경에 문제가 생겨 Django프로젝트 가상환경수정, 쿠키커터 재설치, 디비 설정 재설정을 했습니다.  virtual environment에 문제 생김 문제  virtual environment…"}},{"node":{"id":"6d0c179e-9666-54ed-8e2e-1c6854321f15","frontmatter":{"title":"REVIEW INSTAGRAM CLONE VERSION 1","author":"jyoon","date":"Feb 23rd 2020","tags":["Instagram clone coding","React","redux","Django","Postgres"],"category":"ToyProj"},"fields":{"slug":"review-instagram-clone-version-1"},"excerpt":"간략 설명 React, django(Python), postgreSQL를 이용하여 인스타그램 로그인, 피드, 댓글, 좋아요 기능 구현 react-redux를 사용하여 컴포넌트 상태 관리  container, presentational…"}},{"node":{"id":"25feb30a-d8c2-5de2-a74a-a4e6eae6bd7d","frontmatter":{"title":"REVIEW INSTAGRAM CLONE VERSION 2","author":"jyoon","date":"Feb 24th 2020","tags":["Instagram clone coding","React","Hooks","Apollo","GraphQl","Express","Prisma"],"category":"ToyProj"},"fields":{"slug":"review-instagram-clone-version-2"},"excerpt":"README Instagram clone with React(Hooks) + Prisma(apollo) + Express(Prisma) github Front End(React)github 주소 Back End(Express, Prisma)github…"}},{"node":{"id":"1c504676-670b-5736-a416-791e65b4c72d","frontmatter":{"title":"React CONTAINER and PRESENTATIONAL component patterns with Redux","author":"jyoon","date":"May 29th 2020","tags":["ToyProjReview","Instagram clone coding","container and presentational component patterns","React pattern","React","redux"],"category":"ToyProj"},"fields":{"slug":"react-container-and-presentational-component-patterns-with-redux"},"excerpt":"이번 클론코딩에서 사용된 패턴 이 와 함께 사용 됐는데 어떻게 구성되고 data fetching할때 redux와 어떤 흐름을 보이는 설명하는 포스트 입니다. 구조 흐름 src/index.js Feed/index.js react-redux…"}},{"node":{"id":"cd7c003f-89b8-5582-b59f-f476f64e3b14","frontmatter":{"title":"React Element, virtual Dom","author":"jyoon","date":"May 20th 2020","tags":["virtual dom"],"category":"React"},"fields":{"slug":"react-element-virtual-dom"},"excerpt":"리액트 요소는 리액트 UI를 표현하는 수단 우리는 JSX…"}},{"node":{"id":"c777ff16-b194-5926-8107-3d15b5549edd","frontmatter":{"title":"React Life Cycle","author":"jyoon","date":"May 12th 2020","tags":["ReactLifeCycle","lifeCycle"],"category":"React"},"fields":{"slug":"react-life-cycle"},"excerpt":"실습 gitHub 주소 실습 gitHub 주소   src > component > lifeCycle  폴더 실전 리액트 프로그래밍 예제별로 코드, 설명이 있습니다. src > component > lifeCycle…"}},{"node":{"id":"15995ac6-5283-54ea-80c9-6970727e5d5a","frontmatter":{"title":"React Redux CRUD in project","author":"jyoon","date":"May 4th 2020","tags":["ToyProjReview","Instagram clone coding","React","redux"],"category":"ToyProj"},"fields":{"slug":"react-redux-crud-in-project"},"excerpt":"component구조 app.js : router (Explore, Search, Feed) : react-router-dom lib의 'Route, Switch' 사용 Explore Search Feed Loading FeedPhoto…"}},{"node":{"id":"e6fd35da-df72-5344-808c-4d1b607b1bab","frontmatter":{"title":"STUDY LIST","author":"jyoon","date":"Dec 31st 2021","tags":["studyList"],"category":"studyList"},"fields":{"slug":"study-list"},"excerpt":"DONE LIST (DESC) ...ing 2021.07: 토이프로젝트 데이트 계획/기록 웹앱 2021.07 - 2021.07: [git repo] - redux기초, react-redux, redux middleware(redux-thunk…"}},{"node":{"id":"be493c6f-05a2-5114-bd42-3822e5034450","frontmatter":{"title":"StructuralPattern_01.Adapter","author":"jyoon","date":"Oct 11th 2020","tags":["Adapter","DesignPattern","StructuralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"structuralpattern-01adapter"},"excerpt":"def   POINTinterface…"}},{"node":{"id":"38f6c92e-c7e9-54ca-be80-6acdc6a4d888","frontmatter":{"title":"StructuralPattern_02.Bridge","author":"jyoon","date":"Oct 11th 2020","tags":["Bridge","DesignPattern","StructuralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"structuralpattern-02bridge"},"excerpt":"def 두 컴포넌트들을 사용한다 두 컴포넌트가 각각 자신의 인터페이스를 가지고 있고 서로를 위해서 역할을 한다. a client, a service Bridege는 high-level 아키택쳐 패턴이다. POINT…"}},{"node":{"id":"b28a557c-412b-5b51-acd3-a6d4e74741bc","frontmatter":{"title":"StructuralPattern_03.Composite","author":"jyoon","date":"Oct 11th 2020","tags":["Composite","DesignPattern","StructuralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"structuralpattern-03composite"},"excerpt":"def collection의 각 item들은 다른 collection을 nested 구조로 가질 수 있다.    트리 구조 는 Composite pattern의 완벽한 예다. 트리의 각 노드는 leaf node subtree of node…"}},{"node":{"id":"6868f4c7-b6be-590c-a52b-ee8c302a5229","frontmatter":{"title":"StructuralPattern_04.Decorator","author":"jyoon","date":"Oct 11th 2020","tags":["Decorator","DesignPattern","StructuralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"structuralpattern-04decorator"},"excerpt":"def Decorator pattern은 객체의 행동을 드라마틱하게 확장시키는 것이다. runtime에 새로운 행동을 추가하는 능력은 Decorator객체가 기존 객체를 감싸면서 해낼 수 있다. 여러개의 decorator…"}},{"node":{"id":"587706cf-622f-510b-87cf-26b618dcd4e9","frontmatter":{"title":"StructuralPattern_05.Facade","author":"jyoon","date":"Oct 11th 2020","tags":["Facade","DesignPattern","StructuralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"structuralpattern-05facade"},"excerpt":"def   POINT…"}},{"node":{"id":"44531d98-c6a6-565f-a7b0-c96f672684e7","frontmatter":{"title":"StructuralPattern_06.Flywight","author":"jyoon","date":"Oct 11th 2020","tags":["Flywight","DesignPattern","StructuralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"structuralpattern-06flywight"},"excerpt":"def Flyweight 패턴은 많은 수의 세분화 된 객체를 효율적으로 공유하여 메모리를 절약한다. 공유된 flyweight객체는 변경할 수 없다. 즉, 다른 객체와 공유되는 특성을 나타내므로 변경할 수 없다. 본질적으로 Flyweight…"}},{"node":{"id":"dccb6b34-bf11-5ba1-baa1-8d86855bcc0d","frontmatter":{"title":"StructuralPattern_07.Proxy","author":"jyoon","date":"Oct 11th 2020","tags":["Proxy","DesignPattern","StructuralPattern","JavaScript"],"category":"DesignPattern"},"fields":{"slug":"structuralpattern-07proxy"},"excerpt":"def…"}},{"node":{"id":"cd4b48a8-d56b-5e9c-bc13-4713bfe45060","frontmatter":{"title":"blog 기능 개선 사항 list","author":"jyoon","date":"Dec 30th 2021","tags":["studyList"],"category":"studyList"},"fields":{"slug":"blog-기능-개선-사항-list"},"excerpt":"TOC level 단위 디자인 수정 markdown #, ##, ### css 색 수정하기 포트 바꾸기 markdown css가 잘 적용안되는 것같음. about에 이력, 교육이력, toyProject history component…"}},{"node":{"id":"e8cdc537-f591-5d8e-9eb5-8507eb1f9086","frontmatter":{"title":"call(), apply(), bind()","author":"jyoon","date":"Feb 2nd 2020","tags":["call","apply","bind","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"call-apply-bind"},"excerpt":"call() 정의 주어진 this 값, 전달된 인수 와 함께 함수를 호출 call()을 생성자 연결에 사용 function, method에 속해서 다른 객체를 호출한다. function, method에 this…"}},{"node":{"id":"7daa5da1-a265-58f2-b7c3-6b1d513aae35","frontmatter":{"title":"callback","author":"jyoon","date":"Feb 16th 2020","tags":["callback","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"callback"},"excerpt":"예를 들어 화면 페이지에서 scriptLoad하는 과정이 있는데 페이지에서 load하기 전에 load한 파일에 있는 source…"}},{"node":{"id":"1a254781-49ba-525a-866d-79710f492fe2","frontmatter":{"title":"callback function","author":"jyoon","date":"Feb 2nd 2020","tags":["this","JavaScript this","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"callback-function"},"excerpt":"업무중에 setTimeout, 특정 반목문, event callback function 등 특정상황에서 콜백함수 내부에 this…"}},{"node":{"id":"8de261f4-b11a-593e-9672-2f7f2d327dad","frontmatter":{"title":"class","author":"jyoon","date":"Feb 11th 2020","tags":["class","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"class"},"excerpt":"자바스크립트는 프로토타입 기반 언어라 '상속' 개념이 존재 하지 았는데\n다른 언어의 class와 비슷하게 동작하게 하는 'class'문법이 ES6에 추가 됐다.…"}},{"node":{"id":"e23ce389-e0f2-5df6-9a24-26479051685a","frontmatter":{"title":"clone website review(flex, grid)","author":"jyoon","date":"Jul 18th 2020","tags":["CSS","SCSS"],"category":"CloneWebSite"},"fields":{"slug":"clone-website-reviewflex-grid"},"excerpt":"git repository 강의 주소 clone website 10개 scss file/ review 아래 git repository scss파일에 내용과 review를 작성했습니다. clone01 scss file clone02 scss file…"}},{"node":{"id":"d78c318d-7716-5e70-8d02-bbb315c5aca3","frontmatter":{"title":"closure","author":"jyoon","date":"Feb 5th 2020","tags":["closure","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"closure"},"excerpt":"업무를 하다가보면 closure 영역을 나도모르게 많이 사용하고 있다는 걸 정리하면서 생각이 들었다. (위젯 define option, setTimeout, IIFE 에서도...)\n그런 closure에 대해서 정리를 해보겠다.…"}},{"node":{"id":"29a40ce8-9592-5df4-a4ae-83da04b5f4a8","frontmatter":{"title":"dynamicProgramming_0-1배낭","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-0-1배낭"},"excerpt":"문제 n개의 물건이 있으며, 각 물건에는 무게, 가격(weight, value)이 정해져 있다.\n이 상점에 도둑이 들어와서 물건을 가져온 배낭 용량 C…"}},{"node":{"id":"8bdec1fc-7e30-59e2-9981-6743576c8ddb","frontmatter":{"title":"dynamicProgramming_거스름돈최적화","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","dynamicProgramming","탐욕알고리즘","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-거스름돈최적화"},"excerpt":"문제 105원을 50원, 10원, 5원, 1원…"}},{"node":{"id":"5fc86ff8-3aa8-52e9-bfde-33259f4b17c6","frontmatter":{"title":"dynamicProgramming_문자열인터리빙확인문제","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-문자열인터리빙확인문제"},"excerpt":"문제 주어진 두 문자(str1, str2)가 순서를 유지하고 섞었을때 str3이 되는가? 해결 방법 상향식 방법으로 str1, str2 길이만큼 순회하면서 str3와 비교하면서 아래 4가지 조건을 확인하며 각 셀마다 인터리빙이 되는지 확인한다. str…"}},{"node":{"id":"b0d96d66-806b-57dd-b452-6ec4338a71be","frontmatter":{"title":"dynamicProgramming_문자열최소교정비용","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-문자열최소교정비용"},"excerpt":"문제 두 단어가 주어지며 \"삽입, 삭제, 치환\"을통해서 같게 만들기 위한 최소 교정 비용을 구하는 문제 해결 방법 두글자가 같으면 교정 비용의 차이가 없으므로 대각선 방향 값을 가지고 온다. (예로 'SUND', 'SATURD'의 교정 비용과 'SUN…"}},{"node":{"id":"bd1eb912-eabf-59c9-9569-2214b9a9d2f0","frontmatter":{"title":"dynamicProgramming_부분집합의합구하기","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-부분집합의합구하기"},"excerpt":"문제 0과 양의 정수로 이루어진 집합이 있고 또 다른 양의 정수 X가 있다. 주어진 집합의 부분집합중에 원소의 합이 X인 부분집합이 존재하는지 검사를 하는 함수 예로 집합 {3,2,7,1}이고 X가 6인 경우, 한 부분집합 {3,2,…"}},{"node":{"id":"bd8975cf-a710-56e0-baea-ab5ae10e99c7","frontmatter":{"title":"dynamicProgramming_직사각형에서총경로수구하기","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-직사각형에서총경로수구하기"},"excerpt":"문제 해결 방법 CODE 2중 반복문 이후 최종 cache 배열(상향식 접근방법) numOfPaths(2, 3) 호출이후 cache 배열의 변화 과정"}},{"node":{"id":"2b83adf6-5c8d-5887-8398-b8bd103885f6","frontmatter":{"title":"dynamicProgramming_철근자르기","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-철근자르기"},"excerpt":"문제 길이가 n인 철근이 있을 때 이 철근을 팔아서 얻을 수 있는 이익의 최댓값을 구해보자\n단, 철근은 길이 1에서 길이 n까지 정수의 길이로 나눠 판매할 수 있으며 길이별 가격표가 주어진다. 해결 방법 재귀 문제 풀이 로직 예) maxValue(…"}},{"node":{"id":"1b314a3d-767a-593f-bdf5-95d1287921be","frontmatter":{"title":"dynamicProgramming_최장 공통 부분 수열 길이 구하기","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-최장-공통-부분-수열-길이-구하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\n문자열 내에서 왼쪽에서 오른쪽 방향으로 문자열 내에 들어 잇는 글자의 수열\n반드시 연속적인 글자들로 구성될 필요 x 예 해결 방법…"}},{"node":{"id":"88561e8e-398e-5b11-8b5a-c79a4b6d8dea","frontmatter":{"title":"dynamicProgramming_최장 공통 부분 수열 문자열 출력하기","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"dynamicprogramming-최장-공통-부분-수열-문자열-출력하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\nLCS의 문자열을 구해보자 해결 방법 최장 공통 부분 수열 길이를 다이내믹 프로그래밍으로 구했을때\n거꾸로 좌상단 행까지 경로를 따라 이동해 가면서 LCS…"}},{"node":{"id":"49d84b7d-93d4-5c1b-a444-a232a39001ff","frontmatter":{"title":"eventLoop","author":"jyoon","date":"Feb 16th 2020","tags":["eventLoop","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"eventloop"},"excerpt":"setTimeout을 통해서 비동기 처리를 하는데 호출 스택이 어떻게 되는지 궁금하다 이벤트 루프를 알게 됐고\n맨아래 참고 두번째 유브를 통해서 개념을 알고 첫번째 제로초 사이트에 알기 쉽게 도식화 된 내용을 참고하여 아래…"}},{"node":{"id":"b6b182e5-0a0a-54df-b4a5-e07a98bebfac","frontmatter":{"title":"execute Context","author":"jyoon","date":"Jan 24th 2020","tags":["execute-context","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"execute-context"},"excerpt":"개발을 하다보면 this의 범위가 함수, function, bind, call, apply별로 달라지는 걸볼 수 있는데 왜 이런지에 대해서 다뤄보려고 한다. 1. 실행 컨텍스트란? 실행컨텍스트(execution context…"}},{"node":{"id":"fd041cce-0afa-564b-8e0c-48f8e8b2b5de","frontmatter":{"title":"get started Apollo GraphQl in project","author":"jyoon","date":"Jun 15th 2020","tags":["ToyProjReview","Instagram clone coding2","apollo","graphql","apollo-graphql"],"category":"ToyProj"},"fields":{"slug":"get-started-apollo-graphql-in-project"},"excerpt":"프로젝트에서 사용한 ApolloGraphQL에 대해서 installation npm install apollo-boost @apollo/react-hooks graphql : Apollo Client…"}},{"node":{"id":"e94e54b8-5bc3-546d-8426-6ddc631038f3","frontmatter":{"title":"mouseover, mouseout일때 element를 건너뛰는 특징","author":null,"date":"Jan 24th 2020","tags":["mouseEvent"],"category":"Javascript"},"fields":{"slug":"mouseover-mouseout일때-element를-건너뛰는-특징"},"excerpt":"mouseover/out 이벤트 일때마다 특정 동작을 구현하려고 했을때 '계층구조 el인 경우에 이벤트가 element…"}},{"node":{"id":"f1387314-4ee2-588a-937c-e733cf4950e4","frontmatter":{"title":"practical_redux","author":"jyoon","date":"Jul 6th 2021","tags":["redux"],"category":"React"},"fields":{"slug":"practical-redux"},"excerpt":"1. Redux 개요 1.1. 설치 2. Action -  액션 2.1. 리덕스의 액션이란? 2.2. 리덕스의 액션 생성자란? 2.3. 리덕스의 액션은 어떤 일을 하나요 ? 2.4. 액션을 준비하기 위해서는 ? 2.5. 예시 코드 3. Reducers…"}},{"node":{"id":"b2c02a7b-2955-53f5-8c6b-8ae3d6d32fce","frontmatter":{"title":"prototype","author":"jyoon","date":"Feb 8th 2020","tags":["prototype","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"prototype"},"excerpt":"javascript언어는 prototype을 기반으로 oop를 구현하고 있다.\n(클래스 기반의 oop를 구현한 언어도 있다.)\nprototype 기반의 언어가 어떻게 oop를 구현 하고 있는지 알아보도록 하자. 1 프로토타입의 개념 이해 1-…"}},{"node":{"id":"107e0e64-1a16-5e98-8893-f06f28be4c71","frontmatter":{"title":"react \"container and presentational component patterns\"","author":"jyoon","date":"May 30th 2020","tags":["container and presentational component patterns","React pattern","React"],"category":"React"},"fields":{"slug":"react-container-and-presentational-component-patterns"},"excerpt":"소개 어플리케이션이 커질수록 컴포넌트도 복잡해지고 이에 따라 데이터와 state를 관리하는것도 복잡해진다. 코드 관리도 어려워지고 가독성도 떨어진다. 그래서 \"container and presentational component patterns…"}},{"node":{"id":"6a8b6b06-0797-50a3-b9bc-8b94abe218dc","frontmatter":{"title":"react-redux","author":"jyoon","date":"Apr 26th 2020","tags":["react-redux","redux"],"category":"React"},"fields":{"slug":"react-redux"},"excerpt":"이번에는 react-redux 라이브러리를 사용해서 react에서 어떻게 redux로 컴포넌트 관리를 하는지 알아 보겠습니다. Component 구조/용어 Provider 컴포넌트에 store 설정 connect…"}},{"node":{"id":"79c1e47c-cfd5-5183-9943-d02ab8656270","frontmatter":{"title":"react-redux 흐름 설명","author":"jyoon","date":"Jul 2nd 2021","tags":["react-redux","redux"],"category":"React"},"fields":{"slug":"react-redux-흐름-설명"},"excerpt":"redux를 시작할때 만든 프로젝트를 보면서 이전에는 하지 못했던 패키지 분석까지 해보면서 스스로 흐름을 다시 보면서 글을 쓰다보니 블로그로 남겨 나누면 좋을 것 같아서 올리게 됐다.\n아래 글은 크게 두가지 redux, react-redux…"}},{"node":{"id":"2d542b93-d999-5af9-899f-43633cf606dc","frontmatter":{"title":"recursion_0-1배낭","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-0-1배낭"},"excerpt":"문제 n개의 물건이 있으며, 각 물건에는 무게, 가격(weight, value)이 정해져 있다.\n이 상점에 도둑이 들어와서 물건을 가져온 배낭 용량 C…"}},{"node":{"id":"51050df8-2a53-526b-83e8-3affee78cd11","frontmatter":{"title":"recursion_01.최대공약수","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-01최대공약수"},"excerpt":"문제 최대 공약수 구하기 해결 방법1 m >= n인 두 양의 정수 m과 n에 대해서 m이 n의 배수면 gcd(m,n)=n 이고 그렇지 않으면 gcd(m, n) = gcd(n, m%n)이다. CODE1 해결 방법2 gcd(p, q) = p if q=…"}},{"node":{"id":"67ca05de-0cc8-5db1-ae97-e1aa1fc85dbf","frontmatter":{"title":"recursion_02.문자열길이계산","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-02문자열길이계산"},"excerpt":"문제 문자열 길이 계산 해결 방법 CODE recursion stack"}},{"node":{"id":"a9b4fd1e-becc-5f7f-bcf5-2b1dd1e68bf5","frontmatter":{"title":"recursion_03.문자열(뒤집어)프린트","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-03문자열뒤집어프린트"},"excerpt":"문제 문자열 프린트 문자열 뒤집어 프린트 해결 방법 POINT1: recursion 전에 프린트하면 문자열 앞에서부터 프린트 POINT2: recursion…"}},{"node":{"id":"ef4c7cc9-42ab-5089-8002-82f565437d5d","frontmatter":{"title":"recursion_04.이진수변환","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-04이진수변환"},"excerpt":"문제 십진수를 이진수로 변환하여 출력 해결 방법 음이 아닌 정수 n을 이진수로 변환하여 인쇄 POINT1: n을 2로 나눈 몫을 먼저 2진수로 변환하여 인쇄한 후 POINT2: n을…"}},{"node":{"id":"a95fa6e2-4e0d-552d-ab5a-793e76f44332","frontmatter":{"title":"recursion_05.배열의합","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-05배열의합"},"excerpt":"문제 배열의 숫자 요소를 모두 더하기 해결 방법 arr0 ... arrn-1 까지의 합을 구하여 반환 CODE"}},{"node":{"id":"83e1f921-0a21-56f7-89c7-e3b527eb1a14","frontmatter":{"title":"recursion_06.순차탐색","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-06순차탐색"},"excerpt":"문제 주어진 배열 요소가 몇번째 인지 확인(순차탐색) 해결방법이 두가지가 있다. 첫번재 : recursion 두번째 : binary search와 비슷한 방법 세번째 : 배열 순회 중요 매개변수를 명시화 하자 ! recursion…"}},{"node":{"id":"dfe3b868-cb0b-5943-a384-681130e13340","frontmatter":{"title":"recursion_07.최대값찾기","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-07최대값찾기"},"excerpt":"문제 주어진 배열 요소중 몇번째 요소가 가장 큰 수인지 확인하기 해결방법 두가지 첫번재 : recursion 두번째 : binary search와 비슷한 방법 해결 방법1 POINT1: 배열의 시작점(begin)과 나머지것들과의 Math.max…"}},{"node":{"id":"cdbf65e4-335a-5626-99a5-0118ef29aafb","frontmatter":{"title":"recursion_08.binarySearch","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-08binarysearch"},"excerpt":"문제 merge 정렬 해결 방법1 POINT1: 배열에서 절반을 나누고 절반 index에 해당하는 요소가 target 요소와 비교해서 배열의 왼쪽, 오른쪽을 검색할 것인지 정한다. POINT2: POINT1 과정을 recursion…"}},{"node":{"id":"333c01a5-7b53-594a-9b48-13dd8afb1388","frontmatter":{"title":"recursion_09.미로찾기","author":"jyoon","date":"Jun 27th 2020","tags":["recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-09미로찾기"},"excerpt":"문제 N*N 크기의 미로에서 0,0 부터 시작해서 N,N까지 도착 가능 여부를 확인 해결 방법1 POINT1 : 미로 밖 여부 확인 POINT2 : 길이 아닌경우(벽, 가본길, 막힌길) POINT3 : 출구 POINT…"}},{"node":{"id":"240b5788-a6c6-517f-ad1c-9c97a52b69fc","frontmatter":{"title":"recursion_10.CountingCells in a blob","author":"jyoon","date":"Jun 27th 2020","tags":["dynamicProgramming","recursion"],"category":"Algorithm"},"fields":{"slug":"recursion-10countingcells-in-a-blob"},"excerpt":"문제  Binary 이미지 각 필셀은 background pixel이거나 혹은 imgage, pixel 서로 연결된 image pixel들의 집합을 blob이라고 부름 상하좌우 및 대각방향으로도 연결된것으로 간주. 해결 방법1  입력 N*N 크기의…"}},{"node":{"id":"98a3b72e-54a7-54b4-9bb3-af2fe6351083","frontmatter":{"title":"recursion_11.nQueens","author":"jyoon","date":"Jun 27th 2020","tags":["완전탐색","DFS","recursion","BackTracking"],"category":"Algorithm"},"fields":{"slug":"recursion-11nqueens"},"excerpt":"n-Queens 설명 NxN의 체스판에 N개의 퀸을 서로 공격하지 않게 놓는 방법 혹은 그 수를 구하는 문제 퀸은 가로, 세로, 대각선 공격할 수 있다. , , , 이 필요 DFS…"}},{"node":{"id":"d80a8e7b-898c-5aa6-98fb-d79c012a7d9f","frontmatter":{"title":"recursion_문자열인터리빙확인문제","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-문자열인터리빙확인문제"},"excerpt":"문제 주어진 두 문자(str1, str2)가 순서를 유지하고 섞었을때 str3이 되는가? 해결 방법 아래 두가지 경우에 재귀 호출을 하면서 str1, str2의 모든 경우의 수를 확인하면서 인터리빙인지 확인한다. str1의 첫 글자와 str…"}},{"node":{"id":"1552495d-bad2-581a-b3f7-b77639d3b130","frontmatter":{"title":"recursion_문자열최소교정비용","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-문자열최소교정비용"},"excerpt":"문제 두 단어가 주어지며 \"삽입, 삭제, 치환\"을통해서 같게 만들기 위한 최소 교정 비용을 구하는 문제 해결 방법 작은 문제를 사용해 큰 문제를 정의\nstr1, str…"}},{"node":{"id":"af0dcc87-98ae-5a6f-9ef3-918b9898e9a4","frontmatter":{"title":"recursion_부분집합의합구하기","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-부분집합의합구하기"},"excerpt":"문제 0과 양의 정수로 이루어진 집합이 있고 또 다른 양의 정수 X가 있다. 주어진 집합의 부분집합중에 원소의 합이 X인 부분집합이 존재하는지 검사를 하는 함수 예로 집합 {3,2,7,1}이고 X가 6인 경우, 한 부분집합 {3,2,…"}},{"node":{"id":"3e36d18a-d776-5a49-916e-774000231c21","frontmatter":{"title":"recursion_직사각형에서총경로수구하기","author":"jyoon","date":"Sep 30th 2020","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-직사각형에서총경로수구하기"},"excerpt":"문제 M X N개의 방으로 구성된 직사각형이 있을 때 좌상단 방에서 우하단 방까지 이동하는 모든 경로의 수를 구한다. 단 이동은 오른쪽, 아래 방향으로만 이동가능 해결 방법 방(m, n)은 다은 두방에서 접근이 가능 바로 위방 방: 방(m-1, n…"}},{"node":{"id":"4cd9a9af-629e-554c-a961-e466866f17c9","frontmatter":{"title":"recursion_철근자르기","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-철근자르기"},"excerpt":"문제 길이가 n인 철근이 있을 때 이 철근을 팔아서 얻을 수 있는 이익의 최댓값을 구해보자\n단, 철근은 길이 1에서 길이 n까지 정수의 길이로 나눠 판매할 수 있으며 길이별 가격표가 주어진다. 해결 방법 CODE…"}},{"node":{"id":"016b8ff0-9e5f-5b18-925f-b729e4da4ae5","frontmatter":{"title":"recursion_최거스름돈최적화","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","recursion","Memoization","탑욕알고리즘","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-최거스름돈최적화"},"excerpt":"문제 105원을 50원, 10원, 5원, 1원 4개 동전으로 최소한의 동전으로 거스를수 있는 방법 구하기 해결 방법 탐욕 알고리즘으로 해결 할 수 있다. 50원짜리 동전을 사용할 수 있을 때까지 사용한다. 그다음 액면가인 1…"}},{"node":{"id":"3436135a-c2ea-532e-a8b3-ac9b3c9f53db","frontmatter":{"title":"recursion_최장 공통 부분 수열 길이 구하기","author":"jyoon","date":"Oct 8th 2020","tags":["Algorithm","Memoization","recursion","다이내믹프로그래밍완전정복실전문제"],"category":"Algorithm"},"fields":{"slug":"recursion-최장-공통-부분-수열-길이-구하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\n문자열 내에서 왼쪽에서 오른쪽 방향으로 문자열 내에 들어 잇는 글자의 수열\n반드시 연속적인 글자들로 구성될 필요 x…"}},{"node":{"id":"35bfc595-1700-5c83-b288-03c3711f5d04","frontmatter":{"title":"redux","author":"jyoon","date":"Apr 26th 2020","tags":["redux"],"category":"React"},"fields":{"slug":"redux"},"excerpt":"vanilla-javascript로 숫자 증감 기능을 redux로 사용해서 구현해보면서 알아보겠습니다. redux…"}},{"node":{"id":"bef3b92d-1b14-5420-b9e3-3ca1756bb99d","frontmatter":{"title":"redux 구현해보기","author":"jyoon","date":"Apr 26th 2020","tags":["redux"],"category":"React"},"fields":{"slug":"redux-구현해보기"},"excerpt":"redux 스터디 후 정리하다 보니 구현 해볼 수 있을 것 같아 구현해봤다. 구현 코드 설명 createStore에 reducer를 넣어준다. createStore에 넣어줄때 reducer의 기본값을 return받아 state…"}},{"node":{"id":"5a325965-9333-53b1-a52c-00c1dc5667d6","frontmatter":{"title":"redux비동기처리1(actions으로만처리)","author":"jyoon","date":"Jul 8th 2021","tags":["redux","redux비동기처리"],"category":"React"},"fields":{"slug":"redux비동기처리1actions으로만처리"},"excerpt":"아래 github에 actions으로만 처리한 비동기처리 코드를 확인/동작을 확인 할 수 있다. github 주소 비동기 작업을 어디서 하느냐가 젤 중요 비동기 작업의 전, 후로 액션을 분리 Start Success Fail…"}},{"node":{"id":"57af0675-7566-52e7-91f6-c4ea3e97dea3","frontmatter":{"title":"redux비동기처리2(redux-thunk)","author":"jyoon","date":"Jul 8th 2021","tags":["redux","redux비동기처리","redux-thunk"],"category":"React"},"fields":{"slug":"redux비동기처리2redux-thunk"},"excerpt":"아래 github에 redux-thunk로 비동기 처리한 코드를 확인/동작을 확인 할 수 있다. github 주소 redux-thunk 란? 함수를 dispatch할 수 있게 해주는 미들웨어 위 함수에서 비동기 처리 diapatch 할때 action…"}},{"node":{"id":"15a53aa3-f5fa-5cbc-b584-48556ccbdfd5","frontmatter":{"title":"redux비동기처리3(redux-promise)","author":"jyoon","date":"Jul 8th 2021","tags":["redux","redux비동기처리","redux-promise"],"category":"React"},"fields":{"slug":"redux비동기처리3redux-promise"},"excerpt":"아래 github에 redux-promise로 처리한 비동기처리 코드를 확인/동작을 확인 할 수 있다. github 주소 redux-promise란? redux비동기처리2(redux-thunk…"}},{"node":{"id":"0ecdc4f6-5013-5ac3-94f0-e00afa27a989","frontmatter":{"title":"redux비동기처리4(redux-saga)","author":"jyoon","date":"Jul 8th 2021","tags":["redux","redux비동기처리","redux-saga"],"category":"React"},"fields":{"slug":"redux비동기처리4redux-saga"},"excerpt":"아래 github에 redux-saga로 비동기 처리한 코드를 확인/동작을 확인 할 수 있다. github 주소 redux-saga…"}},{"node":{"id":"cf70d45e-3f52-54d1-8381-d185b9d52309","frontmatter":{"title":"redux패키지분석","author":"jyoon","date":"Jul 6th 2021","tags":["redux"],"category":"React"},"fields":{"slug":"redux패키지분석"},"excerpt":"getState의 반환값은 뭘까? subscribe은 언제 수행되고 어떻게 수행되는 대상 될까? unsubscribe에 대해서 알아보자 getState의 반환값은 뭘까? 아래 파일 위치의 redux의 createStore.js…"}},{"node":{"id":"a343e860-92bc-5ef6-97e4-8100dd746f35","frontmatter":{"title":"splice, slice","author":null,"date":"May 31st 2020","tags":["splice","slice"],"category":"Javascript"},"fields":{"slug":"splice-slice"},"excerpt":"splice, slice 배열객체 함수로서 자주 사용하지 않아 헷갈려서 정리했다.  splice 꼬아서 잇다 라는 의미로 배열 중간에 요소를 넣고 잇는다.(요소를 넣지 않으면 자르는 기능으로 된다.) 추가할 item을 입력하지 않고 splice…"}},{"node":{"id":"b395af44-dd10-5d8d-8916-23fa435563fd","frontmatter":{"title":"this","author":"jyoon","date":"Feb 1st 2020","tags":["this","JavaScript this","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"this"},"excerpt":"상황에 따라서 달라지는 this를 정리해보려고 한다. JavaScripot에서 this 다른 객제지향 언어와 this의 차이점 다른 대부분의 객체지향 언어의 this…"}},{"node":{"id":"36d1e2dc-af62-5558-89aa-4aaf68177b51","frontmatter":{"title":"var vs let vs const","author":"jyoon","date":"Mar 1st 2020","tags":["ES6","let","const","var","scope"],"category":"ES6"},"fields":{"slug":"var-vs-let-vs-const"},"excerpt":"var 키워드로 선언된 변수의 특징 4가지 함수 레벨 스코프(Function-level scope) 함수의 코드 블록만을 스코프로 인정 -> 전역 함수 외부에서 생성한 변수는 모두 전역변수(전역변수 남발 가능성 높음) for…"}},{"node":{"id":"51a4aac0-b00f-56f9-98c6-7c18c02537a4","frontmatter":{"title":"var,let,const & Function,block level scope","author":"jyoon","date":"Apr 8th 2021","tags":["var","let","const","scope","JavaScript"],"category":"Javascript Core"},"fields":{"slug":"var-let-const-function-block-level-scope"},"excerpt":"변수선언방법(var, let, const)에 따른 호이스팅, 클로저 현상에 대해서 그리고 Function-level와 비교하며, Block-level scope와도 비교하며 설명합니다. var Function-level scope…"}},{"node":{"id":"27519ffb-a010-5d99-b208-d6995c3e8232","frontmatter":{"title":"개발 공부와 블로그를 시작하게 된 계기","author":"jyoon","date":"Mar 1st 2020","tags":["개발자"],"category":"생각정리"},"fields":{"slug":"개발-공부와-블로그를-시작하게-된-계기"},"excerpt":"2015년 11월 SI회사에 입사하고 나서…"}},{"node":{"id":"6e0bedbc-076b-5eb4-9183-2e93df0f0cec","frontmatter":{"title":"개발자로 어떻게 살 것 인가?","author":"jyoon","date":"Feb 12th 2020","tags":["개발자"],"category":"생각정리"},"fields":{"slug":"개발자로-어떻게-살-것-인가"},"excerpt":"개발자로 어떻게 살 것인가? 2020년 2월 4년 3개월차 개발자의 고민 작성 개발자 경력은 4년 3개월 차 개발자이지만 2017년 여름 본격적으로 개발 공부를 교양 쌓는다고 여기며 시작한 지 갓 1년…"}},{"node":{"id":"f3b89fc4-dd06-596a-845f-ceec07fed582","frontmatter":{"title":"개발자로 어떻게 살 것 인가?","author":"jyoon","date":"Feb 12th 2020","tags":["개발자"],"category":"생각정리"},"fields":{"slug":"개발자로-어떻게-살-것-인가"},"excerpt":"2021.06.14. - 배달의민족 CEO…"}},{"node":{"id":"75bf8066-9043-50b4-babf-fc03ecdf6346","frontmatter":{"title":"개발자의 글쓰기","author":"jyoon","date":"Jun 3rd 2021","tags":["독서"],"category":"독서후기"},"fields":{"slug":"개발자의-글쓰기"},"excerpt":"…"}},{"node":{"id":"11e9374a-407e-57a7-ab68-f008813c3304","frontmatter":{"title":"객체지향 자바스크립트 1회차(객체지향이란? with design Pattern)","author":"jyoon","date":"Feb 23rd 2020","tags":["객제지향 자바스크립트","객체지향","design Pattern","IOC","DI","SOLID","SRP","OCP","Message","의존성"],"category":"객체지향자바스크립트"},"fields":{"slug":"객체지향-자바스크립트-1회차객체지향이란-with-design-pattern"},"excerpt":"INTRO 목표 객체 지향을 자바스크립트로 해보자. 디자인 패턴과 함께 알아보자. 오늘 배운 이론 남은 4개 강의에서 활용. Value Context, Identifier Context value Context…"}},{"node":{"id":"c3de5eac-5abf-5eb0-a2df-97ede0db9fb1","frontmatter":{"title":"객체지향 자바스크립트 2회차(MVVM 구현)","author":"jyoon","date":"Feb 29th 2020","tags":["객제지향 자바스크립트","객체지향","MVC","MVP","MVVM"],"category":"객체지향자바스크립트"},"fields":{"slug":"객체지향-자바스크립트-2회차mvvm-구현"},"excerpt":"목표 객체지향을 가지고 이것 저것 만들어 볼 예정인데 그중 을 을 만들어 본다. 그리고 다음시간에는 이것을 가지고 서비스를 만들어 볼 예정입니다. MVVM Model, View, ViewModel의 약자 MS의 pwf에 적용 되어 있는 아키텍쳐(ms…"}},{"node":{"id":"05348fd6-5c64-58c5-9f2b-1606d79f735a","frontmatter":{"title":"객체지향 자바스크립트 3회차(MVVM pattern 개선)","author":"jyoon","date":"Mar 7th 2020","tags":["객제지향 자바스크립트","객체지향","MVVM","Strategy Pattern","Observer Pattern","Template method Pattern","Composite Pattern"],"category":"객체지향자바스크립트"},"fields":{"slug":"객체지향-자바스크립트-3회차mvvm-pattern-개선"},"excerpt":"목표 전략적 패턴 적용 기존 Binder 클래스가 코드로 확정 되어 있다. 이 부분을 전략적으로 빼내는 방법을 살펴본다. call -> Observation Binder, ViewModel 통신을 이전 강의 까지 call…"}},{"node":{"id":"2f8c3738-cfad-5315-b558-a89940a04d16","frontmatter":{"title":"객체지향 자바스크립트 4회차(MVVM pattern 개선2)","author":"jyoon","date":"Mar 15th 2020","tags":["객제지향 자바스크립트","객체지향","MVVM","ISP","Visitor Pattern"],"category":"객체지향자바스크립트"},"fields":{"slug":"객체지향-자바스크립트-4회차mvvm-pattern-개선2"},"excerpt":"…"}},{"node":{"id":"46f917cd-6f81-5e72-a1fc-81bdfb5231ca","frontmatter":{"title":"객체지향 자바스크립트 5회차(MVVM pattern 개선3)","author":"jyoon","date":"Mar 22nd 2020","tags":["객제지향 자바스크립트","객체지향","MVVM"],"category":"객체지향자바스크립트"},"fields":{"slug":"객체지향-자바스크립트-5회차mvvm-pattern-개선3"},"excerpt":"https://youtu.be/5UUISCK6CL4 VMSubject > notify에서 this.notifyTarget은 hook으로 상속받은 애가 결정하도록 되어 있다. 이게 뭐때문에 설명한것지 찾아보기 Processor https://youtu…"}},{"node":{"id":"7dc64321-88e9-502b-8357-c2f81da8c66e","frontmatter":{"title":"날짜비교하기","author":null,"date":"Jun 7th 2020","tags":["date"],"category":"Javascript"},"fields":{"slug":"날짜비교하기"},"excerpt":"날짜 비교하기  비교방법 1. relational operators(> >= < <=) 비교 가능하다 2. equality operators == != === !== cannot be used to compare 2.1 euality operators…"}},{"node":{"id":"005cabeb-c8ea-5f61-aaf0-9e38e8b0d298","frontmatter":{"title":"데일카네기 인간관계론","author":"jyoon","date":"Jun 21st 2021","tags":["독서"],"category":"독서후기"},"fields":{"slug":"데일카네기-인간관계론"},"excerpt":"조직내에서 더 나은 커뮤니케이션을 하기 위해서 군대 시작에서 읽었던 책을 다시 읽고 적용 시키면 더 원활한 소통이 될 수 있을것이라 생각해 재독하면서 정리하려고한다. 1부 사람을 다루는 기본 방법…"}},{"node":{"id":"6a467269-4030-52e0-883f-40e248db247d","frontmatter":{"title":"동적프로그래밍 설명","author":"jyoon","date":"Mar 19th 2020","tags":["동적프로그래밍"],"category":"Algorithm"},"fields":{"slug":"동적프로그래밍-설명"},"excerpt":"동적 프로그래밍이란? 동적 프로그래밍은 복잡한 문제를 작은 하위 문제들로 나누어 푸는 최적화기법 DFS…"}},{"node":{"id":"53cb9653-7299-5fb4-99e2-ab5ad75e9a04","frontmatter":{"title":"동적프로그래밍_최소거스름돈","author":"jyoon","date":"Mar 19th 2020","tags":["dynamicProgramming","recursion"],"category":"Algorithm"},"fields":{"slug":"동적프로그래밍-최소거스름돈"},"excerpt":"리뷰 동적 프로그래밍(POINT5,6,7), 거스름돈 최적 케이스 조건3(POINT8,9,10)을 고민하는데 시간이 소요 됐으며 동적 프로그래밍 보다 최적케이스조건중 POINT9번을 생각하는데 더 시간 소요 됐다. 문제 주어진 금액을 동전 d1, d…"}},{"node":{"id":"c7f65f5d-7b0e-5a30-bf20-c284a8545e49","frontmatter":{"title":"동적프로그래밍_피보나치 수열","author":"jyoon","date":"Mar 19th 2020","tags":["fibonacci","dynamicProgramming","recursion"],"category":"Algorithm"},"fields":{"slug":"동적프로그래밍-피보나치-수열"},"excerpt":"문제 문제 배열의 숫자들을 숫자별로 내림차순으로 정렬한다. 해결 방법 num이 1,2일때 '베이스 케이스' fib(n) = fib(n-1) + fib(n-2); CODE - 재귀호출 방법 CODE - 재귀호출 아닌 방식 fibonacci tree…"}},{"node":{"id":"6ff6e536-5bd4-5819-9500-578b4d940b7b","frontmatter":{"title":"렌더링 속도를 올리기 위한 성능 최적화 방법","author":"jyoon","date":"Jun 3rd 2020","tags":["성능개선","React","불변객체","memoize"],"category":"React"},"fields":{"slug":"렌더링-속도를-올리기-위한-성능-최적화-방법"},"excerpt":"3가지에 대해서 다룬다. 상탯값을 불변 객체로 관리 렌더 함수에서 새로운 객체 만들지 않기 메모이제이션(memoization) 참고 코드 git 주소…"}},{"node":{"id":"7e545351-e3d0-5354-a653-e138df98ac57","frontmatter":{"title":"성능개선","author":"jyoon","date":"May 31st 2020","tags":["성능개선","React","React.memo","useState","useReducer","react-virtualized"],"category":"React"},"fields":{"slug":"성능개선"},"excerpt":"성능 체크 방법 체크박스 클릭시 시간이 얼마나 소요되는지 확인 개발자 도구에서 performance 텝에서 확인 성능 개선 세 가지 를 통한 컴포넌트 리렌더링 성능 최적화 참고코드 - TodoList.js, TodoListItem.js…"}},{"node":{"id":"be3ea7e4-864c-5709-abc1-183e814d76ff","frontmatter":{"title":"스택,큐_다리위로 트럭지나가기","author":"jyoon","date":"Mar 21st 2020","tags":["스택,큐"],"category":"Algorithm"},"fields":{"slug":"스택-큐-다리위로-트럭지나가기"},"excerpt":"문제 설명 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다.\n모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다.\n트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length…"}},{"node":{"id":"dfbf8ac3-79d5-5679-ae30-344959b23f0e","frontmatter":{"title":"스택,큐_배포시 배포 가능한 기능 개수 구하기","author":"jyoon","date":"Mar 21st 2020","tags":["스택,큐"],"category":"Algorithm"},"fields":{"slug":"스택-큐-배포시-배포-가능한-기능-개수-구하기"},"excerpt":"문제 설명 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 10…"}},{"node":{"id":"03fe5744-a51b-5930-a72c-260ef2cf8a0a","frontmatter":{"title":"스택,큐_송수신탑","author":"jyoon","date":"Mar 21st 2020","tags":["스택,큐"],"category":"Algorithm"},"fields":{"slug":"스택-큐-송수신탑"},"excerpt":"문제 설명 수평 직선에 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다. 예를 들어 높이가…"}},{"node":{"id":"d1dab9c5-ac6d-572b-b480-6dcc6a5c453d","frontmatter":{"title":"스택,큐_우선순위 알고리즘이 있는 프린터","author":"jyoon","date":"Mar 21st 2020","tags":["스택,큐"],"category":"Algorithm"},"fields":{"slug":"스택-큐-우선순위-알고리즘이-있는-프린터"},"excerpt":"…"}},{"node":{"id":"1852ac01-e2ef-50e3-a12d-ceffb050453a","frontmatter":{"title":"완벽한 공부법","author":"jyoon","date":"Nov 4th 2018","tags":["완벽한 공부법"],"category":"독서후기"},"fields":{"slug":"완벽한-공부법"},"excerpt":"우연한 계기로 이 책을 읽고 신영준, 고영성 작가를 알게 돼서  공부해서 을 높여야 한다는 것을 깨닫고 2018년 여름 패스트 캠퍼스를 다니기 시작한 여름부터 지금 작성하는 2020년 2월까지 약 1년 8개월 동안 Javascript…"}},{"node":{"id":"159b211c-d740-5731-b45f-45c08678e22e","frontmatter":{"title":"완전탐색_누가 더 잘찍을까?","author":"jyoon","date":"Feb 24th 2020","tags":["완전탐색"],"category":"Algorithm"},"fields":{"slug":"완전탐색-누가-더-잘찍을까"},"excerpt":"문제 학생 3명이 있고 각각 찍는 방법이 각각 다르고 그중 누가 제일 잘찍는지 확인하는 문제 해결 방법 학생3명 찍는 방법 배열과 정답 리스트를 비교하면서 학생마다 맞힌 정답 배열길이를 새로운 배열에 push 그 결과를 Math.max…"}},{"node":{"id":"fa512128-52d3-595c-aa47-9e42ad53b19a","frontmatter":{"title":"완전탐색_모든 숫자조합 구해서 소수찾기","author":"jyoon","date":"Feb 24th 2020","tags":["완전탐색"],"category":"Algorithm"},"fields":{"slug":"완전탐색-모든-숫자조합-구해서-소수찾기"},"excerpt":"문제 한자리 숫자가 적힌 종이 조각이 흩어져있습니다.\n흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.\n각 종이 조각에 적힌 숫자가 적힌 문자열 numbers…"}},{"node":{"id":"e730feb6-f7eb-560a-85ef-cc68bb52f9d0","frontmatter":{"title":"완전탐색_숫자야구","author":"jyoon","date":"Feb 24th 2020","tags":["완전탐색"],"category":"Algorithm"},"fields":{"slug":"완전탐색-숫자야구"},"excerpt":"문제 제한사항 질문의 수는 1 이상 100 이하의 자연수입니다. baseball의 각 행은 세 자리의 수, 스트라이크의 수, 볼의 수를 담고 있습니다. 입출력 예 해결 방법 for문 2개 outer for: 예상할 수 있는 3자리 숫자 Array…"}},{"node":{"id":"324f6144-db3a-5a02-9b68-3e0aa6f06b5b","frontmatter":{"title":"재귀","author":"jyoon","date":"Mar 19th 2020","tags":["재귀","recursion"],"category":"Algorithm"},"fields":{"slug":"재귀"},"excerpt":"…"}},{"node":{"id":"dc3d8c2b-7a8d-50d8-8eb9-83e8171ad09e","frontmatter":{"title":"재귀_Recursion 개념과 기본예제, 응용 배우기","author":"jyoon","date":"Apr 10th 2020","tags":["recursion","동적프로그래밍"],"category":"Algorithm"},"fields":{"slug":"재귀-recursion-개념과-기본예제-응용-배우기"},"excerpt":"1. 순환이란? (what is Recursion?) https://www.youtube.com/watch?v=YZcO_jRhvxs 수학적 문제를 recursion으로 풀어보기 Fibonacci Number 최대 공약수\n2.1 Euclid Method…"}},{"node":{"id":"044f0f08-4019-5f26-8ca3-c2db7327334e","frontmatter":{"title":"재귀_모든 문자배열 조합(permutation)","author":"jyoon","date":"May 16th 2020","tags":["permutation","dynamicProgramming","recursion"],"category":"Algorithm"},"fields":{"slug":"재귀-모든-문자배열-조합permutation"},"excerpt":"문제 Write a program to print all permutations of a given string 해결 방법 문자열의 기준을 정하고 \"swap, 재귀호출\"을 통해서 문자열 자리수를 정하면서 문자열 순열을 구한다. POINT1: l, r…"}},{"node":{"id":"62079473-75b3-57f7-b293-cda01f524b74","frontmatter":{"title":"정규식표현","author":null,"date":"Jun 7th 2020","tags":["정규식","regular expression"],"category":"Javascript"},"fields":{"slug":"정규식표현"},"excerpt":"정규식 표현 기본 Letters 입력과 같은 문자열 반환 Digits 입력한 숫자자와 같은 숫자 반환 /d 문자열중 첫번째 숫자 하나만  /D 문자열중 숫자가 아닌 첫번째 문자 .  문자열중 어떤 문자열이던 첫번째 문자열 /d…"}},{"node":{"id":"e9a55fe4-6cfd-5e88-8dac-881f516f53a6","frontmatter":{"title":"정렬_ArrayConsisting 0s,1s,2s","author":"jyoon","date":"May 16th 2020","tags":["sort"],"category":"Algorithm"},"fields":{"slug":"정렬-arrayconsisting-0s-1s-2s"},"excerpt":"문제 Given an array A[] consisting 0s, 1s and 2s.\nThe task is to write a function that sorts the given array. \nThe functions should put all 0s…"}},{"node":{"id":"dd7e9485-009e-5578-811d-99bded72d0ec","frontmatter":{"title":"정렬_K번째 수 구하기","author":"jyoon","date":"Feb 25th 2020","tags":["sort"],"category":"Algorithm"},"fields":{"slug":"정렬-k번째-수-구하기"},"excerpt":"문제 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하라 제한사항 해결 방법 map을 이용해 주어진 배열을 가공해 새로운 배열을 만든다. 주어진 배열을 자르기 위해서, k…"}},{"node":{"id":"8d3bf9f8-3797-5a9c-aa27-ab2319edf003","frontmatter":{"title":"정렬_quickSort","author":"jyoon","date":"May 16th 2020","tags":["sort"],"category":"Algorithm"},"fields":{"slug":"정렬-quicksort"},"excerpt":"문제 quick_sort Quick Sort에 대해서 QuickSort is a Divide and Conquer algorithm.  It picks an element as pivot and partitions the given array…"}},{"node":{"id":"6ce042bf-4b43-5158-8c3b-94c76715015f","frontmatter":{"title":"정렬_교수의 논문 인용단위 HIndex 구하기","author":"jyoon","date":"Feb 25th 2020","tags":["sort"],"category":"Algorithm"},"fields":{"slug":"정렬-교수의-논문-인용단위-hindex-구하기"},"excerpt":"문제 H-Index를 구하라! H-Index란? 어떤 과학자가 발표한 논문 n편 중, h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 h가 이 과학자의 H-Index입니다. 해결 방법 논문이 \"h번 이상 인용된 논문이 h…"}},{"node":{"id":"09099024-bcf1-55b6-ad1a-efeb006b917f","frontmatter":{"title":"정렬_배열로 조합할 수 있는 수중 가장 큰 수 구하기","author":"jyoon","date":"Feb 25th 2020","tags":["sort"],"category":"Algorithm"},"fields":{"slug":"정렬-배열로-조합할-수-있는-수중-가장-큰-수-구하기"},"excerpt":"문제 문제 배열의 숫자들을 숫자별로 내림차순으로 정렬한다. 해결 방법 배열의 숫자를 문자형으로 바꾸고 자리를 바꿔가며 문자를 조합하고 숫자형으로 다시 변환한뒤 숫자 크기를 비교한다 STEP STEP1: 배열의 숫자형을 문자형으로 변환 STEP…"}},{"node":{"id":"6715600b-74f0-5c28-8f13-612db0be1263","frontmatter":{"title":"컴포넌트 공통 기능 관리(HOC,렌더속성값)","author":"jyoon","date":"May 25th 2020","tags":["고차컴포넌트","렌더속성값","HOC","React"],"category":"React"},"fields":{"slug":"컴포넌트-공통-기능-관리hoc-렌더속성값"},"excerpt":"참고 아래 소스 코드를 순차 적으로 확인할 수 있다. github…"}},{"node":{"id":"c20c5f4e-7488-54db-b8f0-d943d6987608","frontmatter":{"title":"코어자바스크립트 후기","author":"jyoon","date":"Jan 20th 2020","tags":["자바스크립트 완벽가이드","완벽한 인사이드 자바스크립트","속깊은 자바스크립트"],"category":"독서후기"},"fields":{"slug":"코어자바스크립트-후기"},"excerpt":"이직을 하고 나서 vanilla JS로 이뤄진 자체 프론트엔드 프레임워크 안에서 개발을 해야 하는 상황에서 전 SI회사에서 폴리머로 프론트 작업을 할 때 신경 쓰지 않아도 되는 \"클로저, 비동기, scope, 명시적 this…"}},{"node":{"id":"d75f54af-0b3c-5951-ab03-c2673ac9a665","frontmatter":{"title":"패키지분석vscode팁","author":"jyoon","date":"Jul 6th 2021","tags":["redux"],"category":"React"},"fields":{"slug":"패키지분석vscode팁"},"excerpt":"추가정리 vscode에서 lib 분석시 팁 해당 코드가 어떤 함수 내 코드인지 한눈에 확인하는 방법  command + r: go to symbol in Editor shift + command + r: go to symbol in workspace…"}},{"node":{"id":"57db454a-e1d9-534a-aae3-390d622194e3","frontmatter":{"title":"회사에서 일 잘하는 방법(feat.가점주의, 강점-재능,성공경험)","author":"jyoon","date":"Jul 11th 2021","tags":["개발자","일잘러"],"category":"생각정리"},"fields":{"slug":"회사에서-일-잘하는-방법feat가점주의-강점-재능-성공경험"},"excerpt":"회사에서 일 잘하는 방법(feat…"}}]}},"pageContext":{"categories":["studyList","객체지향자바스크립트","development","생각정리","ToyProj","Django","Python","TIL","React","Network","Javascript","Javascript Core","ES6","git","DesignPattern","DataStructure","css","CloneWebSite","독서후기","Algorithm"],"categoryPostCounts":{"studyList":2,"객체지향자바스크립트":5,"development":1,"생각정리":5,"ToyProj":8,"Django":2,"Python":1,"TIL":4,"React":22,"Network":3,"Javascript":5,"Javascript Core":14,"ES6":2,"git":1,"DesignPattern":23,"DataStructure":6,"css":1,"CloneWebSite":1,"독서후기":4,"Algorithm":47}}},"staticQueryHashes":["3542266321","3649515864","63159454"]}