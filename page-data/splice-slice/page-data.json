{"componentChunkName":"component---src-templates-single-post-js","path":"/splice-slice","result":{"data":{"markdownRemark":{"id":"a343e860-92bc-5ef6-97e4-8100dd746f35","html":"<p>splice, slice 배열객체 함수로서 자주 사용하지 않아 헷갈려서 정리했다. </p>\n<h1 id=\"splice\" style=\"position:relative;\"><a href=\"#splice\" aria-label=\"splice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>splice</h1>\n<ul>\n<li>꼬아서 잇다 라는 의미로 배열 중간에 요소를 넣고 잇는다.(요소를 넣지 않으면 자르는 기능으로 된다.)</li>\n<li><strong>추가할 item을 입력하지 않고 splice함수를 사용하면 return으로 잘린 배열을 반환, 원본 array도 자른 요소가 빠진다.( 아래 예제 첫번째 참고 )</strong></li>\n<li><strong>추가할 itme을 입력하고 splice함수를 사용하면 return으로 빈배열을 반환하고 원본 array에 item을 추가한 array를 반환받는다.</strong></li>\n<li>\n<p>syntax</p>\n<blockquote>\n<p>let arrDeletedItems = array.splice(start[, deleteCount[, item1[, item2[, ...]]]])</p>\n</blockquote>\n<ul>\n<li>start</li>\n<li>The index at which to start changing the array.</li>\n<li>deleteCount</li>\n<li>첫번째 배개변수부터 얼마나 제거할것인가</li>\n<li>itemX</li>\n<li>삽입할 배열 요서소 </li>\n<li>splice 안에서는 함수 메소드 call 함수를 사용해서 호출할것이라고 예상</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> months <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Jan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'March'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'April'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'June'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>months<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Array [\"March\", \"April\", \"June\"]</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>months<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//['Jan']</span>\n\n  <span class=\"token keyword\">const</span> months1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Jan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'March'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'April'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'June'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// inserts at index 1</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>months1<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Feb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// []</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>months1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Array [\"Jan\", \"Feb\", \"March\", \"April\", \"June\"]</span>\n\n\n  <span class=\"token keyword\">const</span> months2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Jan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'March'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'April'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'June'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// replaces 1 element at index 4</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>months2<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'May'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//[]</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>months2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Array [\"Jan\", \"Feb\", \"March\", \"April\", \"May\"]</span></code></pre></div>\n<h1 id=\"slice\" style=\"position:relative;\"><a href=\"#slice\" aria-label=\"slice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>slice</h1>\n<ul>\n<li>\n<p>syntax</p>\n<blockquote>\n<p>arr.slice([begin[, end]])</p>\n</blockquote>\n</li>\n<li>\n<p><strong>자른다는 의미에서 원본은 그대로 두고 shallow coopy를 통해서 시작과 끝을 매개변수로 받아 새로운 배열을 return 한다.</strong></p>\n<ul>\n<li>첫번째 매개 변수</li>\n<li>\"Zero-based index at which to begin extraction.\"</li>\n<li>음수 입력시 뒤에서 부터 자른다.</li>\n<li>두번째 매개 변수</li>\n<li>Zero-based index before which to end extraction. slice extracts up to <strong>but not including end.</strong></li>\n<li>그 숫자를 포함하지 않는다.(직전까지 자른다.)   </li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> animals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ant'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bison'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'camel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'duck'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>animals<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: Array [\"camel\", \"duck\", \"elephant\"]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>animals<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: Array [\"camel\", \"duck\"]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>animals<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: Array [\"bison\", \"camel\", \"duck\", \"elephant\"]</span></code></pre></div>\n<h1 id=\"비교\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B5%90\" aria-label=\"비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교</h1>\n<ul>\n<li>\n<p>splice</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>array.splice(2) return [3,4,5]. </li>\n<li>원래 배열은 [1,2]이 된다.</li>\n</ul>\n</li>\n<li>\n<p>slice</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>array.slice(2) return [3,4,5]</li>\n<li>원래 배열은 그대로 [1,2,3,4,5]</li>\n<li>tip array.slice(0)이 되면 shallow copy가 된다. </li>\n<li><a href=\"https://stackoverflow.com/questions/47738344/does-javascript-slice-method-return-a-shallow-copy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고 url</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"splice, slice","author":null,"date":"May 31st 2020","tags":["splice","slice"],"category":"Javascript","image":null}},"file":null},"pageContext":{"slug":"splice-slice","tableOfContents":"<ul>\n<li><a href=\"/splice-slice/#splice\">splice</a></li>\n<li><a href=\"/splice-slice/#slice\">slice</a></li>\n<li><a href=\"/splice-slice/#%EB%B9%84%EA%B5%90\">비교</a></li>\n</ul>","imageUrl":""}}}