{"componentChunkName":"component---src-templates-tag-posts-js","path":"/tag/algorithm","result":{"data":{"allMarkdownRemark":{"totalCount":17,"edges":[{"node":{"id":"2d542b93-d999-5af9-899f-43633cf606dc","frontmatter":{"title":"recursion_0-1배낭","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-0-1배낭"},"excerpt":"문제 n개의 물건이 있으며, 각 물건에는 무게, 가격(weight, value)이 정해져 있다.\n이 상점에 도둑이 들어와서 물건을 가져온 배낭 용량 C…"}},{"node":{"id":"29a40ce8-9592-5df4-a4ae-83da04b5f4a8","frontmatter":{"title":"dynamicProgramming_0-1배낭","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-0-1배낭"},"excerpt":"문제 n개의 물건이 있으며, 각 물건에는 무게, 가격(weight, value)이 정해져 있다.\n이 상점에 도둑이 들어와서 물건을 가져온 배낭 용량 C…"}},{"node":{"id":"4cd9a9af-629e-554c-a961-e466866f17c9","frontmatter":{"title":"recursion_철근자르기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-철근자르기"},"excerpt":"문제 길이가 n인 철근이 있을 때 이 철근을 팔아서 얻을 수 있는 이익의 최댓값을 구해보자\n단, 철근은 길이 1에서 길이 n까지 정수의 길이로 나눠 판매할 수 있으며 길이별 가격표가 주어진다. 해결 방법 CODE…"}},{"node":{"id":"2b83adf6-5c8d-5887-8398-b8bd103885f6","frontmatter":{"title":"dynamicProgramming_철근자르기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-철근자르기"},"excerpt":"문제 길이가 n인 철근이 있을 때 이 철근을 팔아서 얻을 수 있는 이익의 최댓값을 구해보자\n단, 철근은 길이 1에서 길이 n까지 정수의 길이로 나눠 판매할 수 있으며 길이별 가격표가 주어진다. 해결 방법 재귀 문제 풀이 로직 예) maxValue(…"}},{"node":{"id":"8bdec1fc-7e30-59e2-9981-6743576c8ddb","frontmatter":{"title":"dynamicProgramming_거스름돈최적화","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","탐욕알고리즘","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-거스름돈최적화"},"excerpt":"문제 105원을 50원, 10원, 5원, 1원…"}},{"node":{"id":"016b8ff0-9e5f-5b18-925f-b729e4da4ae5","frontmatter":{"title":"recursion_최거스름돈최적화","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","recursion","Memoization","탑욕알고리즘","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-최거스름돈최적화"},"excerpt":"문제 105원을 50원, 10원, 5원, 1원 4개 동전으로 최소한의 동전으로 거스를수 있는 방법 구하기 해결 방법 탐욕 알고리즘으로 해결 할 수 있다. 50원짜리 동전을 사용할 수 있을 때까지 사용한다. 그다음 액면가인 1…"}},{"node":{"id":"88561e8e-398e-5b11-8b5a-c79a4b6d8dea","frontmatter":{"title":"dynamicProgramming_최장 공통 부분 수열 문자열 출력하기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-최장-공통-부분-수열-문자열-출력하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\nLCS의 문자열을 구해보자 해결 방법 최장 공통 부분 수열 길이를 다이내믹 프로그래밍으로 구했을때\n거꾸로 좌상단 행까지 경로를 따라 이동해 가면서 LCS…"}},{"node":{"id":"1b314a3d-767a-593f-bdf5-95d1287921be","frontmatter":{"title":"dynamicProgramming_최장 공통 부분 수열 길이 구하기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-최장-공통-부분-수열-길이-구하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\n문자열 내에서 왼쪽에서 오른쪽 방향으로 문자열 내에 들어 잇는 글자의 수열\n반드시 연속적인 글자들로 구성될 필요 x 예 해결 방법…"}},{"node":{"id":"3436135a-c2ea-532e-a8b3-ac9b3c9f53db","frontmatter":{"title":"recursion_최장 공통 부분 수열 길이 구하기","date":"October 8th 2020","author":"jyoon","tags":["Algorithm","Memoization","recursion","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-최장-공통-부분-수열-길이-구하기"},"excerpt":"문제 최장 공통 부분 수열(Longest common subsequce - LCS)\n문자열 내에서 왼쪽에서 오른쪽 방향으로 문자열 내에 들어 잇는 글자의 수열\n반드시 연속적인 글자들로 구성될 필요 x…"}},{"node":{"id":"af0dcc87-98ae-5a6f-9ef3-918b9898e9a4","frontmatter":{"title":"recursion_부분집합의합구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-부분집합의합구하기"},"excerpt":"문제 0과 양의 정수로 이루어진 집합이 있고 또 다른 양의 정수 X가 있다. 주어진 집합의 부분집합중에 원소의 합이 X인 부분집합이 존재하는지 검사를 하는 함수 예로 집합 {3,2,7,1}이고 X가 6인 경우, 한 부분집합 {3,2,…"}},{"node":{"id":"bd1eb912-eabf-59c9-9569-2214b9a9d2f0","frontmatter":{"title":"dynamicProgramming_부분집합의합구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-부분집합의합구하기"},"excerpt":"문제 0과 양의 정수로 이루어진 집합이 있고 또 다른 양의 정수 X가 있다. 주어진 집합의 부분집합중에 원소의 합이 X인 부분집합이 존재하는지 검사를 하는 함수 예로 집합 {3,2,7,1}이고 X가 6인 경우, 한 부분집합 {3,2,…"}},{"node":{"id":"5fc86ff8-3aa8-52e9-bfde-33259f4b17c6","frontmatter":{"title":"dynamicProgramming_문자열인터리빙확인문제","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-문자열인터리빙확인문제"},"excerpt":"문제 주어진 두 문자(str1, str2)가 순서를 유지하고 섞었을때 str3이 되는가? 해결 방법 상향식 방법으로 str1, str2 길이만큼 순회하면서 str3와 비교하면서 아래 4가지 조건을 확인하며 각 셀마다 인터리빙이 되는지 확인한다. str…"}},{"node":{"id":"d80a8e7b-898c-5aa6-98fb-d79c012a7d9f","frontmatter":{"title":"recursion_문자열인터리빙확인문제","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-문자열인터리빙확인문제"},"excerpt":"문제 주어진 두 문자(str1, str2)가 순서를 유지하고 섞었을때 str3이 되는가? 해결 방법 아래 두가지 경우에 재귀 호출을 하면서 str1, str2의 모든 경우의 수를 확인하면서 인터리빙인지 확인한다. str1의 첫 글자와 str…"}},{"node":{"id":"bd8975cf-a710-56e0-baea-ab5ae10e99c7","frontmatter":{"title":"dynamicProgramming_직사각형에서총경로수구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-직사각형에서총경로수구하기"},"excerpt":"문제 해결 방법 CODE 2중 반복문 이후 최종 cache 배열(상향식 접근방법) numOfPaths(2, 3) 호출이후 cache 배열의 변화 과정"}},{"node":{"id":"3e36d18a-d776-5a49-916e-774000231c21","frontmatter":{"title":"recursion_직사각형에서총경로수구하기","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-직사각형에서총경로수구하기"},"excerpt":"문제 M X N개의 방으로 구성된 직사각형이 있을 때 좌상단 방에서 우하단 방까지 이동하는 모든 경로의 수를 구한다. 단 이동은 오른쪽, 아래 방향으로만 이동가능 해결 방법 방(m, n)은 다은 두방에서 접근이 가능 바로 위방 방: 방(m-1, n…"}},{"node":{"id":"1552495d-bad2-581a-b3f7-b77639d3b130","frontmatter":{"title":"recursion_문자열최소교정비용","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","recursion","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"recursion-문자열최소교정비용"},"excerpt":"문제 두 단어가 주어지며 \"삽입, 삭제, 치환\"을통해서 같게 만들기 위한 최소 교정 비용을 구하는 문제 해결 방법 작은 문제를 사용해 큰 문제를 정의\nstr1, str…"}},{"node":{"id":"b0d96d66-806b-57dd-b452-6ec4338a71be","frontmatter":{"title":"dynamicProgramming_문자열최소교정비용","date":"September 30th 2020","author":"jyoon","tags":["Algorithm","dynamicProgramming","다이내믹프로그래밍완전정복실전문제"],"image":null},"fields":{"slug":"dynamicprogramming-문자열최소교정비용"},"excerpt":"문제 두 단어가 주어지며 \"삽입, 삭제, 치환\"을통해서 같게 만들기 위한 최소 교정 비용을 구하는 문제 해결 방법 두글자가 같으면 교정 비용의 차이가 없으므로 대각선 방향 값을 가지고 온다. (예로 'SUND', 'SATURD'의 교정 비용과 'SUN…"}}]}},"pageContext":{"tag":"Algorithm"}},"staticQueryHashes":["3542266321","3649515864"]}