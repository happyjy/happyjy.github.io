{"componentChunkName":"component---src-templates-tag-posts-js","path":"/tag/recursion","result":{"data":{"allMarkdownRemark":{"totalCount":16,"edges":[{"node":{"id":"03e71f27-2099-5288-987e-928492a78d34","frontmatter":{"title":"recursion_09.미로찾기","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-09미로찾기"},"excerpt":"문제 merge 정렬 해결 방법1 POINT1: 현재 위치가 출구이거나 혹은 POINT2: 이웃한 셀들 중 하나에서 현재 위치를 지나지 않고 출구까지 가는 경로 //recursion을 떠 올려야한다. CODE1 이동 path"}},{"node":{"id":"c65cfd2b-8257-56ad-980d-201fc2bbe1fe","frontmatter":{"title":"recursion_07.최대값찾기","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-07최대값찾기"},"excerpt":"문제 순차탐색(주어진 배열 요소가 몇번째 인지 확인하기) 해결방법 두가지 매개변수 명시화 방법 merge 정렬 해결 방법1 POINT1: 배열의 시작점(begin)과 나머지것들과의 Math.max…"}},{"node":{"id":"f343ae0c-9624-56ae-afef-27eaa234f398","frontmatter":{"title":"recursion_08.binarySearch","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-08binarysearch"},"excerpt":"문제 merge 정렬 해결 방법1 POINT1: 배열에서 절반을 나누고 절반 index에 해당하는 요소가 target 요소와 비교해서 배열의 왼쪽, 오른쪽을 검색할 것인지 정한다. POINT2: POINT1 과정을 recursion…"}},{"node":{"id":"507a9a4d-e135-5224-864b-9fa80ebe9fd0","frontmatter":{"title":"recursion_06.순차탐색","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-06순차탐색"},"excerpt":"문제 순차탐색(주어진 배열 요소가 몇번째 인지 확인하기) 해결방법이 두가지가 있다. 첫번재 : recursion 두번째 : binary search와 비슷한 방법 세번째 : 배열 순회 중요 ! 매개변수를 명시화 하자 ! recursion…"}},{"node":{"id":"63935ede-eb8d-5aa4-be8b-0461621c3fce","frontmatter":{"title":"recursion_03.문자열(뒤집어)프린트","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-03문자열뒤집어프린트"},"excerpt":"문제 문자열 프린트 문자열 뒤집어 프린트 해결 방법 POINT1: recursion 전에 프린트하면 문자열 앞에서부터 프린트 POINT2: recursion…"}},{"node":{"id":"46b1d64e-8dee-5c24-86d6-262a955fc4fd","frontmatter":{"title":"recursion_05.배열의합","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-05배열의합"},"excerpt":"문제 배열의 숫자 요소를 모두 더하기 해결 방법 arr0 ... arrn-1 까지의 합을 구하여 반환 CODE"}},{"node":{"id":"7a9e66f1-caf6-5369-b6cb-bf41875bd132","frontmatter":{"title":"recursion_04.이진수변환","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-04이진수변환"},"excerpt":"문제 십진수를 이진수로 변환하여 출력 해결 방법 음이 아닌 정수 n을 이진수로 변환하여 인쇄 POINT1: n을 2로 나눈 몫을 먼저 2진수로 변환하여 인쇄한 후 POINT2: n을…"}},{"node":{"id":"d8a7ca81-8573-51f9-8317-13dfa5940329","frontmatter":{"title":"recursion_02.문자열길이계산","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-02문자열길이계산"},"excerpt":"문제 문자열 길이 계산 해결 방법 CODE recursion stack"}},{"node":{"id":"d6666868-3e6f-55b6-80bb-db719f898318","frontmatter":{"title":"recursion_11.nQueens","date":"June 27th 2020","author":"jyoon","tags":["완전탐색","DFS","recursion","BackTracking"],"image":null},"fields":{"slug":"recursion-11nqueens"},"excerpt":"n-Queens 설명 NxN의 체스판에 N개의 퀸을 서로 공격하지 않게 놓는 방법 혹은 그 수를 구하는 문제 퀸은 가로, 세로, 대각선 공격할 수 있다. DFS(깊이우선탐색, Depth First Search), 재귀(Recursion…"}},{"node":{"id":"0ac53aec-eace-5783-9e02-d91e8202ed9d","frontmatter":{"title":"recursion_10.CountingCells in a blob","date":"June 27th 2020","author":"jyoon","tags":["dynamic programming","recursion"],"image":null},"fields":{"slug":"recursion-10countingcells-in-a-blob"},"excerpt":"문제  Binary 이미지 각 필셀은 background pixel이거나 혹은 imgage, pixel 서로 연결된 image pixel들의 집합을 blob이라고 부름 상하좌우 및 대각방향으로도 연결된것으로 간주. 해결 방법1 입력: N*N 크기의…"}},{"node":{"id":"55e11032-3343-576b-88a0-3b73a4dbe449","frontmatter":{"title":"recursion_01.최대공약수","date":"June 27th 2020","author":"jyoon","tags":["recursion"],"image":null},"fields":{"slug":"recursion-01최대공약수"},"excerpt":"문제 최대 공약수 구하기 해결 방법1 m >= n인 두 양의 정수 m과 n에 대해서 m이 n의 배수면 gcd(m,n)=n 이고 그렇지 않으면 gcd(m, n) = gcd(n, m%n)이다. CODE1 해결 방법2 gcd(p, q) = p if q=…"}},{"node":{"id":"a2470424-b4d7-553e-bac6-2e1d8a811792","frontmatter":{"title":"재귀_모든 문자배열 조합","date":"May 16th 2020","author":"jyoon","tags":["permutation","dynamic programming","recursion"],"image":null},"fields":{"slug":"재귀-모든-문자배열-조합"},"excerpt":"문제 Write a program to print all permutations of a given string 해결 방법 문자열의 기준을 정하고 \"swap, 재귀호출\"을 통해서 문자열 자리수를 정하면서 문자열 순열을 구한다. POINT1: l, r…"}},{"node":{"id":"dc3d8c2b-7a8d-50d8-8eb9-83e8171ad09e","frontmatter":{"title":"재귀_Recursion 개념과 기본예제, 응용 배우기","date":"April 10th 2020","author":"jyoon","tags":["recursion","동적프로그래밍"],"image":null},"fields":{"slug":"재귀-recursion-개념과-기본예제-응용-배우기"},"excerpt":"1. 순환이란? (what is Recursion?) https://www.youtube.com/watch?v=YZcO_jRhvxs 수학적 문제를 recursion으로 풀어보기 Fibonacci Number 최대 공약수\n2.1 Euclid Method…"}},{"node":{"id":"2fa1eba5-2ed9-51a6-ac2d-76cc53082767","frontmatter":{"title":"동적프로그래밍_피보나치 수열","date":"March 19th 2020","author":"jyoon","tags":["fibonacci","dynamic programming","recursion"],"image":null},"fields":{"slug":"동적프로그래밍-피보나치-수열"},"excerpt":"문제 문제 배열의 숫자들을 숫자별로 내림차순으로 정렬한다. 해결 방법 num이 1,2일때 '베이스 케이스' fib(n) = fib(n-1) + fib(n-2); CODE - 재귀호출 방법 CODE - 재귀호출 아닌 방식 fibonacci tree…"}},{"node":{"id":"894cfede-6e0b-50d0-971c-427d28317cb2","frontmatter":{"title":"동적프로그래밍_최소거스름돈","date":"March 19th 2020","author":"jyoon","tags":["dynamic programming","recursion"],"image":null},"fields":{"slug":"동적프로그래밍-최소거스름돈"},"excerpt":"리뷰 동적 프로그래밍(POINT5,6,7), 거스름돈 최적 케이스 조건3(POINT8,9,10)을 고민하는데 시간이 소요 됐으며 동적 프로그래밍 보다 최적케이스조건중 POINT9번을 생각하는데 더 시간 소요 됐다. 문제 주어진 금액을 동전 d1, d…"}},{"node":{"id":"324f6144-db3a-5a02-9b68-3e0aa6f06b5b","frontmatter":{"title":"재귀","date":"March 19th 2020","author":"jyoon","tags":["재귀","recursion"],"image":null},"fields":{"slug":"재귀"},"excerpt":"…"}}]}},"pageContext":{"tag":"recursion"}}}